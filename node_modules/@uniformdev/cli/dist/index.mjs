#!/usr/bin/env node
import{a as f,b as _,c as r,d as A}from"./chunk-64DQ4B7X.mjs";r();import k from"yargs";r();import b from"yargs";r();import w from"yargs";r();var t=_(A());import{writeFile as M}from"fs";import O from"node-fetch";import{exit as l}from"process";r();var g="https://uniform.app";var P={command:"download [output]",describe:"Download intent manifest",builder:e=>{var o;return e.option("apiKey",{alias:"k",demandOption:!0,string:!0,default:process.env.UNIFORM_API_KEY,describe:"Uniform API key to use. Defaults to UNIFORM_API_KEY env if set."}).option("project",{describe:"Uniform project ID. Defaults to UOPT_CLI_PROJECT_ID or UNIFORM_PROJECT_ID env. Supports dotenv.",default:(o=process.env.UOPT_CLI_PROJECT_ID)!=null?o:process.env.UNIFORM_PROJECT_ID,type:"string",alias:["p"]}).option("preview",{describe:"If set, fetches the unpublished preview manifest (assuming your API key has permission)",default:!1,type:"boolean",alias:["d"]}).option("output",{string:!0,alias:"o",default:process.env.UNIFORM_MANIFEST_PATH,describe:"Path to write manifest to. Defaults to UNIFORM_MANIFEST_PATH env if set."})},handler:async({apiKey:e,output:o,project:i,preview:c})=>{/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i.test(e)?console.error(t.default.yellow("WARNING: you appear to be using a deprecated type of API key. Keys like this will stop working soon; please create new keys on uniform.app.")):i||(console.error(t.default.red("You must specify the project ID")),l(1));let C=R(),p=new URLSearchParams;i&&p.set("projectId",i),c&&p.set("preview","true");let a=`${C}api/v1/manifest?${p.toString()}`,n;try{if(n=await O(a,{headers:{"x-api-key":e}}),!n.ok)throw n.status===403?`The API key ${e} had no published data. This means it is either incorrectly entered, or intents have not been published since creating the API key.`:`${n.status} ${n.statusText}, content ${await n.text()}`}catch(s){console.error(t.default.red(`\u26A0 Error fetching intent manifest ${a}`)),console.error(t.default.gray(`  \u2757 ${s}`)),l(1)}let y;try{y=await n.json()}catch(s){console.error(t.default.red(t.default.red(`\u26A0 Error parsing intent manifest ${a}`))),console.error(t.default.gray(`  \u2757 ${s}`)),console.error(`Response: ${await n.text()}`),l(1)}let h=JSON.stringify(y,null,2);o?M(o,h,s=>{s&&(console.error(`Error writing file to ${o}
`,s),l(1)),console.log(t.default.green(`\u2705 ${o} has been updated from ${a}`))}):console.log(h)}},R=()=>{let e=process.env.UNIFORM_CLI_BASE_URL||g;return e.endsWith("/")||(e+="/"),e},I=P;var T={command:"manifest <command>",describe:"Intent manifest commands",builder:()=>w.command(I),handler:()=>w.showHelp()},U=T;var $={command:"optimize <command>",aliases:["opt"],describe:"Uniform Optimize commands",builder:()=>b.command(U),handler:()=>b.showHelp()},v=$;f("dotenv").config();var x=["@uniformdev/canvas/cli","@uniformdev/context/cli"],u=k.scriptName("uniform");x.flatMap(e=>{try{let o=f(e).uniformCLI.commands;(Array.isArray(o)?o:[]).forEach(c=>{u=u.command(c)})}catch{}});u.command(v).demandCommand(1,"").strict().help().argv;
