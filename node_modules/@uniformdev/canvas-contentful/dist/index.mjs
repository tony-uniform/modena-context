import{createBatchEnhancer as S,UniqueBatchEntries as _}from"@uniformdev/canvas";var T=class{constructor(t){this._clients={},Array.isArray(t)?t.forEach(n=>this.addClient(n)):t&&this.addClient(t)}addClient({source:t="default",client:n,previewClient:o}){if(this._clients[t])throw new Error(`The source ${t} is always registered`);if(!n)throw new Error("You must provide a Contentful client for the ContentfulClientList");this._clients[t]={client:n,previewClient:o||n}}getClient({source:t="default",isPreviewClient:n}){let o=this._clients[t];if(!!o)return n?o.previewClient:o.client}};import{createLimitPolicy as Q}from"@uniformdev/canvas";var x=Q({throttle:{limit:55,interval:1e3}});function P(e){return typeof e=="string"?e:typeof e=="object"&&e&&"error"in e?e.error:e instanceof Error?e.toString():JSON.stringify(e,null,2)}function V(e,t){if(!!e)return`${t==="desc"?"-":""}${e}`}function L({clients:e,parameterValue:t,parameterName:n,component:o,context:g}){let{source:i="default"}=t,a=e.getClient({source:i,isPreviewClient:g.preview});if(!a)throw new Error(`No Contentful client could be resolved for source key '${i}' referenced in parameter '${n} in component '${o.type}'. Ensure that the 'clients' property you are passing to the enhancer has a client instance registered for the source key.`);return a}var $={select:"fields",include:1},k=Object.freeze(["contentfulEntry"]);function j(e){return e instanceof T}function se({client:e,previewClient:t,createQuery:n,useBatching:o,limitPolicy:g}){if(!e)throw new Error("No Contentful clients were provided to the enhancer. You must provide at least one client via the `client` or `clients` property.");let a=(()=>{if(j(e))return e;let s=new T;return s.addClient({client:e,previewClient:t}),s})(),y=g||x;return o?S({handleBatch:async s=>{var c;let l=s.reduce((u,r)=>{let{parameter:f,parameterName:C,component:h,context:m}=r.args,d=f.value;if(!R(d))return u;let E=b({parameterValue:d,parameterName:C,clients:a,component:h,context:m}),p="";if(A(d))p="legacy-group";else{let{source:I="default"}=d;p=I}return u[p]&&Array.isArray(u[p].tasks)?u[p].tasks.push(r):u[p]={client:E,tasks:[r]},u},{});try{console.time("fetch all entries");for await(let[u,r]of Object.entries(l)){let{context:f,component:C}=r.tasks[0].args,h=(c=n==null?void 0:n({component:C,defaultQuery:{...$},context:f}))!=null?c:$,m=new _(r.tasks,E=>A(E.parameter.value)?E.parameter.value:E.parameter.value.entryId),d=Object.keys(m.groups);console.time(`fetch entries ${u}`);try{(await r.client.getEntries({"sys.id[in]":d.join(","),limit:d.length,...h})).items.forEach(p=>{m.resolveKey(p.sys.id,p)}),m.resolveRemaining(null)}finally{console.timeEnd(`fetch entries ${u}`)}}console.timeEnd("fetch all entries")}catch(u){let r=P(u),f=new Error(`Failed loading Contentful entries batch (${s.length}) ${r}`);s.forEach(C=>C.reject(f))}},shouldQueue:({parameter:s})=>O(s),limitPolicy:y}):{enhanceOne:async function({parameter:l,parameterName:c,component:u,context:r}){var f,C;if(O(l)){if(!R(l.value))return null;let h=b({clients:a,parameterName:c,parameterValue:l.value,component:u,context:r}),m=A(l.value)?l.value:l.value.entryId,d=(f=n==null?void 0:n({parameter:l,parameterName:c,component:u,defaultQuery:{...$},context:r}))!=null?f:$;try{return console.time(`fetch entry ${m}`),await h.getEntry(m,d)}catch(E){let p=P(E);throw A(l.value)?new Error(`Failed loading Contentful entry '${l.value}' referenced in parameter '${c}': ${p}`):new Error(`Failed loading Contentful entry '${m}' from source '${(C=l.value.source)!=null?C:"default"}' referenced in parameter '${c}': ${p}`)}finally{console.timeEnd(`fetch entry ${m}`)}}},limitPolicy:y}}function O(e){var t;return e.type===k[0]&&(((t=e.value)==null?void 0:t.entryId)||typeof e.value=="string")}function A(e){return typeof e=="string"}function R(e){return!(!e||!A(e)&&!e.entryId)}function b({clients:e,parameterValue:t,parameterName:n,component:o,context:g}){if(A(t)){let y=e.getClient({isPreviewClient:g.preview});if(!y)throw new Error(`Parameter '${n}' in component '${o.type}' has a value '${t}' that is not compatible with multi-space/environment usage. If you wish to use multiple spaces/environments, you must convert your Canvas component parameters to the multi-space/environment compatible version. Otherwise, you can continue to use your parameters as-is, but must specify one of the clients provided to the Contentful enhancer as the 'default' client by registering it without specifying a source key.`);return y}let{source:i="default"}=t,a=e.getClient({source:i,isPreviewClient:g.preview});if(!a)throw new Error(`No Contentful client could be resolved for source key '${i}' referenced in parameter '${n} in component '${o.type}'. Ensure that the 'clients' property you are passing to the enhancer has a client instance registered for the source key.`);return a}var F={select:"fields",include:1},Y=Object.freeze(["contentfulMultiEntry"]);function Ce({clients:e,createQuery:t,limitPolicy:n}){if(!e)throw new Error("No Contentful clients were provided to the enhancer. You must provide at least one client via the ContentfulClientList.");return{enhanceOne:async function({parameter:i,parameterName:a,component:y,context:s}){var l,c;if(B(i)){if(!U(i.value))return null;let u=L({clients:e,parameterName:a,parameterValue:i.value,component:y,context:s}),r=i.value.entries,f=(l=t==null?void 0:t({parameter:i,parameterName:a,component:y,defaultQuery:{...F},context:s}))!=null?l:F;try{return console.time(`fetch entries ${r.join()}`),(await u.getEntries({"sys.id[in]":r.join(),limit:r.length,...f})).items}catch(C){let h=P(C);throw new Error(`Failed loading Contentful entries '${r.join()}' from source '${(c=i.value.source)!=null?c:"default"}' referenced in parameter '${a}': ${h}`)}finally{console.timeEnd(`fetch entries ${r.join()}`)}}},limitPolicy:n||x}}function B(e){return e.type===Y[0]}function U(e){var t;return!(!e||!((t=e.entries)!=null&&t.length))}var q=Object.freeze(["contentfulQuery"]),M={select:"fields",include:1};function ye({clients:e,createQuery:t,limitPolicy:n}){if(!e)throw new Error("No Contentful clients were provided to the enhancer. You must provide at least one client via the ContentfulClientList.");return{enhanceOne:async function({parameter:i,parameterName:a,component:y,context:s}){var l,c;if(D(i)){if(!z(i.value))return null;let u=L({clients:e,parameterName:a,parameterValue:i.value,component:y,context:s}),r=i.value,f=K(r.count),C=(l=t==null?void 0:t({parameter:i,parameterName:a,component:y,defaultQuery:{...M},context:s}))!=null?l:M,h=`fetch query: ${f} entries with '${r.contentType}' content type`;try{return console.time(h),(await u.getEntries({content_type:r.contentType,order:V(r.sortBy,r.sortOrder),limit:f,...C})).items}catch(m){let d=P(m);throw new Error(`Failed loading Contentful entries with '${r.contentType}' content type from source '${(c=r.source)!=null?c:"default"}' referenced in parameter '${a}': ${d}`)}finally{console.timeEnd(h)}}},limitPolicy:n||x}}function D(e){return e.type===q[0]}function z(e){return!(!e||!e.source||!e.contentType||typeof e.count=="undefined")}function K(e){return!e||e<1?1:e>1e3?1e3:e}import{documentToHtmlString as G}from"@contentful/rich-text-html-renderer";var Ee=({parameter:e})=>{let t=e.value;if(!t)return t;if(!H(t))return N(t),t;for(let n of t)N(n);return t};function N(e){var t;typeof(e==null?void 0:e.fields)=="object"&&Object.entries((t=e.fields)!=null?t:{}).forEach(([n,o])=>{typeof o=="object"&&"nodeType"in o&&o.nodeType==="document"&&(e.fields[n]=G(o))})}function H(e){return Array.isArray(e)}export{Y as CANVAS_CONTENTFUL_MULTI_PARAMETER_TYPES,k as CANVAS_CONTENTFUL_PARAMETER_TYPES,q as CANVAS_CONTENTFUL_QUERY_PARAMETER_TYPES,T as ContentfulClientList,Ee as contentfulRichTextToHtmlEnhancer,se as createContentfulEnhancer,Ce as createContentfulMultiEnhancer,ye as createContentfulQueryEnhancer};
