import{createLimitPolicy as f}from"@uniformdev/canvas";var Q=Object.freeze(["contentstackEntrySelector"]);function U({client:e,previewClient:c=e,addEntryQueryOptions:r,useBatching:l,limitPolicy:o}){if(l)throw new Error("Batching is not yet supported for contentstack");return{enhanceOne:async({parameter:t,parameterName:m,component:p,context:s})=>{var u;if(P(t)){let a=s.preview?c:e;try{let n=a.ContentType(t.value.contentTypeUid).Entry(t.value.entryUid);return await((u=r==null?void 0:r({query:n,parameter:t,component:p,parameterName:m,context:s}))!=null?u:n).toJSON().fetch()}catch(n){let i=d(n)?n.error_message:n.message;throw new Error(`Failed loading Contentstack entry ${t.value} ${i}`)}}},limitPolicy:o!=null?o:f({throttle:!1})}}function P(e){var c,r;return e.type==="contentstackEntrySelector"&&((c=e.value)==null?void 0:c.contentTypeUid)&&((r=e.value)==null?void 0:r.entryUid)}function d(e){return e.error_message!==void 0}import{createLimitPolicy as S}from"@uniformdev/canvas";var $=Object.freeze(["contentstackMultiEntrySelector"]);function Y({client:e,previewClient:c=e,addEntryQueryOptions:r,useBatching:l,limitPolicy:o}){if(l)throw new Error("Batching is not yet supported for contentstack");return{enhanceOne:async({parameter:t,parameterName:m,component:p,context:s})=>{if(T(t)){let u=s.preview?c:e;try{let a=t.value.entries.map(n=>{var k;let i=u.ContentType(n.contentTypeUid).Entry(n.entryUid);return((k=r==null?void 0:r({query:i,parameter:t,component:p,parameterName:m,context:s}))!=null?k:i).toJSON().fetch()});return await Promise.all(a)}catch(a){let n=g(a)?a.error_message:a.message;throw new Error(`Failed loading Contentstack entries ${t.value} ${n}`)}}},limitPolicy:o!=null?o:S({throttle:!1})}}function T(e){return e.type==="contentstackMultiEntrySelector"&&e.value}function g(e){return e.error_message!==void 0}import{createLimitPolicy as x}from"@uniformdev/canvas";var W=Object.freeze(["contentstackQueryEntrySelector"]);function X({client:e,previewClient:c=e,addEntryQueryOptions:r,useBatching:l,limitPolicy:o}){if(l)throw new Error("Batching is not yet supported for contentstack");return{enhanceOne:async({parameter:t,parameterName:m,component:p,context:s})=>{var u;if(A(t)){let a=s.preview?c:e;try{let n=a.ContentType(t.value.contentType.id).Query().limit(typeof t.value.limit=="string"?parseInt(t.value.limit,10)||1:t.value.limit);return t.value.sortBy&&t.value.sortOrder&&(n=n.addParam(t.value.sortOrder,t.value.sortBy)),(await((u=r==null?void 0:r({query:n,parameter:t,component:p,parameterName:m,context:s}))!=null?u:n).toJSON().find())[0]}catch(n){let i=R(n)?n.error_message:n.message;throw new Error(`Failed loading Contentstack entries ${t.value} ${i}`)}}},limitPolicy:o!=null?o:x({throttle:!1})}}function A(e){return e.type==="contentstackQueryEntrySelector"&&e.value}function R(e){return e.error_message!==void 0}export{$ as CANVAS_CONTENTSTACK_MULTI_PARAMETER_TYPES,Q as CANVAS_CONTENTSTACK_PARAMETER_TYPES,W as CANVAS_CONTENTSTACK_QUERY_PARAMETER_TYPES,U as createContentstackEnhancer,Y as createContentstackMultiEnhancer,X as createContentstackQueryEnhancer};
