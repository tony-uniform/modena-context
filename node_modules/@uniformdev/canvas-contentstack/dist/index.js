var E=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var x=(e,o)=>{for(var r in o)E(e,r,{get:o[r],enumerable:!0})},A=(e,o,r,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let a of T(o))!g.call(e,a)&&a!==r&&E(e,a,{get:()=>o[a],enumerable:!(s=S(o,a))||s.enumerable});return e};var R=e=>A(E({},"__esModule",{value:!0}),e);var L={};x(L,{CANVAS_CONTENTSTACK_MULTI_PARAMETER_TYPES:()=>M,CANVAS_CONTENTSTACK_PARAMETER_TYPES:()=>v,CANVAS_CONTENTSTACK_QUERY_PARAMETER_TYPES:()=>q,createContentstackEnhancer:()=>w,createContentstackMultiEnhancer:()=>N,createContentstackQueryEnhancer:()=>O});module.exports=R(L);var h=require("@uniformdev/canvas"),v=Object.freeze(["contentstackEntrySelector"]);function w({client:e,previewClient:o=e,addEntryQueryOptions:r,useBatching:s,limitPolicy:a}){if(s)throw new Error("Batching is not yet supported for contentstack");return{enhanceOne:async({parameter:t,parameterName:m,component:p,context:i})=>{var l;if(_(t)){let c=i.preview?o:e;try{let n=c.ContentType(t.value.contentTypeUid).Entry(t.value.entryUid);return await((l=r==null?void 0:r({query:n,parameter:t,component:p,parameterName:m,context:i}))!=null?l:n).toJSON().fetch()}catch(n){let u=V(n)?n.error_message:n.message;throw new Error(`Failed loading Contentstack entry ${t.value} ${u}`)}}},limitPolicy:a!=null?a:(0,h.createLimitPolicy)({throttle:!1})}}function _(e){var o,r;return e.type==="contentstackEntrySelector"&&((o=e.value)==null?void 0:o.contentTypeUid)&&((r=e.value)==null?void 0:r.entryUid)}function V(e){return e.error_message!==void 0}var f=require("@uniformdev/canvas"),M=Object.freeze(["contentstackMultiEntrySelector"]);function N({client:e,previewClient:o=e,addEntryQueryOptions:r,useBatching:s,limitPolicy:a}){if(s)throw new Error("Batching is not yet supported for contentstack");return{enhanceOne:async({parameter:t,parameterName:m,component:p,context:i})=>{if(Q(t)){let l=i.preview?o:e;try{let c=t.value.entries.map(n=>{var k;let u=l.ContentType(n.contentTypeUid).Entry(n.entryUid);return((k=r==null?void 0:r({query:u,parameter:t,component:p,parameterName:m,context:i}))!=null?k:u).toJSON().fetch()});return await Promise.all(c)}catch(c){let n=U(c)?c.error_message:c.message;throw new Error(`Failed loading Contentstack entries ${t.value} ${n}`)}}},limitPolicy:a!=null?a:(0,f.createLimitPolicy)({throttle:!1})}}function Q(e){return e.type==="contentstackMultiEntrySelector"&&e.value}function U(e){return e.error_message!==void 0}var P=require("@uniformdev/canvas"),q=Object.freeze(["contentstackQueryEntrySelector"]);function O({client:e,previewClient:o=e,addEntryQueryOptions:r,useBatching:s,limitPolicy:a}){if(s)throw new Error("Batching is not yet supported for contentstack");return{enhanceOne:async({parameter:t,parameterName:m,component:p,context:i})=>{var l;if(I(t)){let c=i.preview?o:e;try{let n=c.ContentType(t.value.contentType.id).Query().limit(typeof t.value.limit=="string"?parseInt(t.value.limit,10)||1:t.value.limit);return t.value.sortBy&&t.value.sortOrder&&(n=n.addParam(t.value.sortOrder,t.value.sortBy)),(await((l=r==null?void 0:r({query:n,parameter:t,component:p,parameterName:m,context:i}))!=null?l:n).toJSON().find())[0]}catch(n){let u=b(n)?n.error_message:n.message;throw new Error(`Failed loading Contentstack entries ${t.value} ${u}`)}}},limitPolicy:a!=null?a:(0,P.createLimitPolicy)({throttle:!1})}}function I(e){return e.type==="contentstackQueryEntrySelector"&&e.value}function b(e){return e.error_message!==void 0}0&&(module.exports={CANVAS_CONTENTSTACK_MULTI_PARAMETER_TYPES,CANVAS_CONTENTSTACK_PARAMETER_TYPES,CANVAS_CONTENTSTACK_QUERY_PARAMETER_TYPES,createContentstackEnhancer,createContentstackMultiEnhancer,createContentstackQueryEnhancer});
