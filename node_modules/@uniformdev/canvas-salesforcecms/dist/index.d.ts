import { EnhancerContext, ComponentParameter, ComponentInstance, LimitPolicy, ComponentParameterEnhancer } from '@uniformdev/canvas';

/** https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_responses_managed_content_version.htm */
declare type ManagedContentVersion = {
    contentKey: string;
    /** nodes === fields */
    contentNodes: Record<string, ManagedContentMediaNodeValue | ManagedContentTextNodeValue | ManagedContentDateTimeNodeValue | ManagedContentDateNodeValue | ManagedContentMediaSourceNodeValue>;
    contentUrlName: string;
    language: string;
    managedContentId: string;
    /** ISO date */
    publishedDate: string;
    title: string;
    type: string;
    typeLabel: string;
    unauthenticatedUrl: string;
};
/** reference: https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_responses_managed_content_media_node_value.htm */
interface ManagedContentMediaNodeValue {
    altText: string;
    altUrl: string;
    contentKey: string;
    fileName: string;
    mediaType: 'Media';
    mimeType: string;
    nodeType: string;
    resourceUrl: string;
    thumbnailUrl: string;
    title: string;
    unauthenticatedUrl: string;
    url: string;
}
/** reference: https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_responses_managed_content_text_node_value.htm */
interface ManagedContentTextNodeValue {
    nodeType: 'MultilineText' | 'NameField' | 'RichText' | 'Text';
    value: string;
}
/** reference: https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_responses_managed_content_date_and_time_node_value.htm */
interface ManagedContentDateTimeNodeValue {
    dateTimeValue: string;
    nodeType: 'DateTime';
    timeZone: string;
}
/** reference: https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_responses_managed_content_date_node_value.htm */
interface ManagedContentDateNodeValue {
    nodeType: 'Date';
    value: string;
}
/** reference: https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_responses_managed_content_media_source_node_value.htm */
interface ManagedContentMediaSourceNodeValue {
    fileName: string;
    isExternal: boolean;
    mediaType: 'Document' | 'Image';
    mimeType: string;
    nodeType: 'MediaSource';
    referenceId: string;
    resourceUrl: string;
    unauthenticatedUrl: string;
    url: string;
}
interface ManagedContentVersionCollection {
    currentPageUrl: string;
    items: ManagedContentVersion[];
    nextPageUrl: string;
    total: number;
    /** managedContentTypes is only defined if the `includeMetadata=true` parameter is include in the content query */
    managedContentTypes?: Record<string, {
        label: string;
        name: string;
        nodeTypes: Record<string, {
            label: string;
            name: string;
            nodeType: string;
        }>;
    }>;
    /** totalTypes is only defined if the `includeMetadata=true` parameter is include in the content query */
    totalTypes?: number;
}

declare const defaultSFCMSApiVersion = "52.0";
interface GetManagedContentVersionFunctionArgs {
    managedContentId: string;
    querystringParams?: URLSearchParams;
}
declare type GetManagedContentVersionFunction = (args: GetManagedContentVersionFunctionArgs) => Promise<ManagedContentVersion>;
interface SalesforceCMSClient {
    getManagedContentVersion: GetManagedContentVersionFunction;
}
interface ClientConfiguration {
    instanceUrl: string;
    channelId: string;
    organizationId: string;
    apiVersion?: number;
}
declare const createSalesforceCMSClient: (config: ClientConfiguration) => SalesforceCMSClient;

declare type EntrySelectorParameterValue = string;
declare type CreateQuerystringParamsOptions<TContext extends EnhancerContext = EnhancerContext> = {
    parameterName: string;
    parameter: ComponentParameter<EntrySelectorParameterValue>;
    component: ComponentInstance;
    defaultQuerystringParams: URLSearchParams | undefined;
    /** The enhancer context provided to the enhance() function */
    context: TContext;
};
/** The default shape of the result value of the SalesforceCMS enhancer. */
declare type SalesforceCMSEnhancerResult = ManagedContentVersion;
declare const CANVAS_SFCMS_PARAMETER_TYPES: readonly string[];
declare function createSalesforceCMSEnhancer({ client, previewClient, createQuerystringParams, limitPolicy, }: {
    client: SalesforceCMSClient;
    previewClient?: SalesforceCMSClient;
    createQuerystringParams?: (options: CreateQuerystringParamsOptions) => URLSearchParams | undefined;
    limitPolicy?: LimitPolicy;
}): ComponentParameterEnhancer<string, ManagedContentVersion>;

export { CANVAS_SFCMS_PARAMETER_TYPES, ClientConfiguration, CreateQuerystringParamsOptions, EntrySelectorParameterValue, GetManagedContentVersionFunction, GetManagedContentVersionFunctionArgs, ManagedContentDateNodeValue, ManagedContentDateTimeNodeValue, ManagedContentMediaNodeValue, ManagedContentMediaSourceNodeValue, ManagedContentTextNodeValue, ManagedContentVersion, ManagedContentVersionCollection, SalesforceCMSClient, SalesforceCMSEnhancerResult, createSalesforceCMSClient, createSalesforceCMSEnhancer, defaultSFCMSApiVersion };
