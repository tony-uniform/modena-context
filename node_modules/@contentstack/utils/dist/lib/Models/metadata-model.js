export function createMetadata(attribute) {
    return {
        text: attribute['#text'],
        itemUid: attribute["data-sys-entry-uid"] || attribute["data-sys-asset-uid"],
        itemType: attribute.type,
        styleType: attribute["sys-style-type"],
        attributes: attribute,
        contentTypeUid: attribute["data-sys-content-type-uid"],
    };
}
export function nodeToMetadata(attribute, textNode) {
    return {
        text: textNode.text,
        itemUid: attribute["entry-uid"] || attribute["asset-uid"],
        itemType: attribute.type,
        styleType: attribute["display-type"],
        attributes: attribute,
        contentTypeUid: attribute["content-type-uid"],
    };
}
export function attributeToString(attributes) {
    var result = '';
    var _loop_1 = function (key) {
        if (Object.prototype.hasOwnProperty.call(attributes, key)) {
            var element = attributes[key];
            if (element instanceof Array) {
                var elementString_1 = '';
                var isFirst_1 = true;
                element.forEach(function (value) {
                    if (isFirst_1) {
                        elementString_1 += "" + value;
                        isFirst_1 = false;
                    }
                    else {
                        elementString_1 += ", " + value;
                    }
                });
                element = elementString_1;
            }
            else if (typeof element === 'object') {
                var elementString = '';
                for (var elementKey in element) {
                    if (Object.prototype.hasOwnProperty.call(element, elementKey)) {
                        var value = element[elementKey];
                        elementString += elementKey + ":" + value + "; ";
                    }
                }
                element = elementString;
            }
            result += " " + key + "=\"" + element + "\"";
        }
    };
    for (var key in attributes) {
        _loop_1(key);
    }
    return result;
}
//# sourceMappingURL=metadata-model.js.map