var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
export function elementToJson(element) {
    var obj = __assign({}, element.rawAttributes);
    element.childNodes.forEach(function (chileNode) {
        var node = chileNode;
        obj = __assign(__assign({}, obj), parseElement(node));
    });
    return obj;
}
function parseElement(node) {
    var obj = {};
    if (node.nodeType === 3) {
        obj['#text'] = node.text;
    }
    else if (node.nodeType === 1) {
        obj[node.tagName.toLowerCase()] = elementToJson(node);
    }
    return obj;
}
//# sourceMappingURL=html-to-json.js.map