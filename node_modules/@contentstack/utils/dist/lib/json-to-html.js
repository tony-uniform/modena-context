import { findRenderContent } from './helper/find-render-content';
import { findEmbeddedItems } from './helper/find-embeded-object';
import { enumerate, enumerateContents } from './helper/enumerate-entries';
export function jsonToHTML(option) {
    if (option.entry instanceof Array) {
        enumerate(option.entry, function (entry) {
            jsonToHTML({ entry: entry, paths: option.paths, renderOption: option.renderOption });
        });
    }
    else {
        enumerateKeys({
            entry: option.entry,
            paths: option.paths,
            renderOption: option.renderOption,
        });
    }
}
function enumerateKeys(option) {
    for (var _i = 0, _a = option.paths; _i < _a.length; _i++) {
        var key = _a[_i];
        findRenderContent(key, option.entry, (function (content) {
            return enumerateContents(content, option.renderOption, function (metadata) {
                return findEmbeddedItems(metadata, option.entry)[0];
            });
        }));
    }
}
//# sourceMappingURL=json-to-html.js.map