{"version":3,"file":"index.es.js","sources":["../src/Models/metadata-model.ts","../src/embedded-types/style-type.ts","../src/helper/html-to-json.ts","../src/extensions/index.ts","../src/options/default-options.ts","../src/helper/find-embeded-object.ts","../src/helper/find-render-content.ts","../src/render-embedded-objects.ts","../src/nodes/node-type.ts","../src/nodes/mark-type.ts","../src/nodes/node.ts","../src/nodes/document.ts","../src/nodes/text.ts","../src/options/default-node-options.ts","../src/helper/enumerate-entries.ts","../src/json-to-html.ts","../src/gql.ts","../src/entry-editable.ts"],"sourcesContent":["import StyleType from '../embedded-types/style-type';\nimport TextNode from '../nodes/text';\nimport { EmbeddedItem } from './embedded-object';\nexport interface Metadata {\n  text: string\n  attributes: Attributes\n\n  itemUid: string | undefined\n  itemType: 'entry' | 'asset' | undefined\n  styleType: StyleType | undefined\n  contentTypeUid: string | undefined\n}\n\nexport interface Attributes {\n  type?: 'entry' | 'asset',\n  class?: string,\n  [key: string]: any,\n  'sys-style-type'?: string,\n}\n\nexport interface EntryAttributes extends Attributes {\n  'data-sys-entry-uid': string;\n  'data-sys-entry-local': string;\n  'data-sys-content-type-uid': string;\n}\n\nexport interface AssetAttributes extends Attributes {\n  'data-sys-asset-uid': string;\n  'data-sys-asset-filelink': string;\n  'data-sys-asset-contenttype': string;\n}\n\nexport function createMetadata(attribute: Attributes): Metadata {\n  return {\n    text: attribute['#text'],\n    itemUid: attribute[\"data-sys-entry-uid\"] || attribute[\"data-sys-asset-uid\"],\n    itemType: attribute.type,\n    styleType: attribute[\"sys-style-type\"] as StyleType,\n    attributes: attribute,\n    contentTypeUid: attribute[\"data-sys-content-type-uid\"],\n  }\n}\n\nexport function nodeToMetadata(attribute: Attributes, textNode: TextNode): Metadata {\n return {\n  text: textNode.text,\n  itemUid: attribute[\"entry-uid\"] || attribute[\"asset-uid\"],\n  itemType: attribute.type,\n  styleType: attribute[\"display-type\"] as StyleType,\n  attributes: attribute,\n  contentTypeUid: attribute[\"content-type-uid\"],\n }\n}\n\nexport function attributeToString( attributes: Attributes):string {\n  let result = ''\n  for (const key in attributes) {\n    if (Object.prototype.hasOwnProperty.call(attributes, key)) {\n      let element = attributes[key];\n      if (element instanceof Array) {\n        let elementString = ''\n        let isFirst = true \n        element.forEach((value) => {\n          if (isFirst) {\n            elementString += `${value}`\n            isFirst = false\n          }else {\n            elementString += `, ${value}`\n          }\n        })\n        element = elementString\n      } else if (typeof element === 'object') {\n        let elementString = ''\n        for (const elementKey in element) {\n          if (Object.prototype.hasOwnProperty.call(element, elementKey)) {\n            const value = element[elementKey];\n            elementString += `${elementKey}:${value}; `\n          }\n        }\n        element = elementString\n      }\n      result += ` ${key}=\"${element}\"`\n    }\n  }\n  return result\n}","enum StyleType {\n  BLOCK = 'block',\n  INLINE = 'inline',\n  LINK = 'link',\n  DISPLAY = 'display',\n  DOWNLOAD = 'download'\n}\n\nexport default StyleType;\n","import { HTMLElement } from 'node-html-parser';\n\nexport function elementToJson(element: HTMLElement): object {\n  let obj: any = { ...element.rawAttributes }\n\n  element.childNodes.forEach((chileNode) => {\n    const node: HTMLElement = (chileNode as HTMLElement)\n    obj = {\n      ...obj,\n      ...parseElement(node)\n    }\n  })\n  return obj\n}\n\nfunction parseElement(node: HTMLElement): any {\n  const obj: any = {}\n  if (node.nodeType === 3) {\n    obj['#text'] = node.text;\n  }else if (node.nodeType === 1) {\n    obj[node.tagName.toLowerCase()] = elementToJson(node)\n  }\n  return obj\n}","import { elementToJson } from '../helper/html-to-json';\nimport { EntryAttributes, AssetAttributes, Metadata, createMetadata, Attributes } from '../Models/metadata-model';\nimport { parse } from 'node-html-parser';\nconst frameflag = 'documentfragmentcontainer';\n\ndeclare global {\n  interface String {\n    forEachEmbeddedItem(callbackfn: (embededObjectTag: string, object: Metadata) => void): void;\n  }\n}\n\nString.prototype.forEachEmbeddedItem = function (\n  callbackfn: (embededObjectTag: string, object: Metadata) => void,\n): void {\n\n  const str = `<${frameflag}>${this.toString()}</${frameflag}>`;\n  const root = parse(str)\n  const embeddedEntries = root.querySelectorAll(\".embedded-entry\")\n  \n  embeddedEntries.forEach((element) => {    \n    callbackfn(element.outerHTML, createMetadata(elementToJson(element) as Attributes))\n  })\n  const embeddedAsset = root.querySelectorAll(\".embedded-asset\")\n  embeddedAsset.forEach((element) => {\n    callbackfn(element.outerHTML, createMetadata(elementToJson(element) as Attributes))\n  })\n};\n","import StyleType from '../embedded-types/style-type';\nimport { RenderOption } from '.';\nimport { Metadata } from '../Models/metadata-model';\nimport { EmbeddedItem } from '../Models/embedded-object';\nimport { EntryNode } from '../Models/json-rte-model';\n\nexport const defaultOptions: RenderOption = {\n  [StyleType.BLOCK]: (item: EmbeddedItem | EntryNode) =>\n    `<div><p>${item.title || item.uid}</p><p>Content type: <span>${item._content_type_uid || (item.system ? item.system.content_type_uid : '')}</span></p></div>`,\n  [StyleType.INLINE]: (item: EmbeddedItem| EntryNode) => `<span>${item.title || item.uid}</span>`,\n  [StyleType.LINK]: (item: EmbeddedItem| EntryNode, metadata: Metadata) => `<a href=\"${item.url}\">${metadata.text || item.title || item.uid || (item.system ? item.system.uid : '')}</a>`,\n  [StyleType.DISPLAY]: (item: EmbeddedItem| EntryNode, metadata: Metadata) => `<img src=\"${item.url}\" alt=\"${metadata.attributes.alt || item.title || item.filename || item.uid \n    || (item.system ? item.system.uid : '')}\" />`,\n  [StyleType.DOWNLOAD]: (item: EmbeddedItem| EntryNode, metadata: Metadata) => `<a href=\"${item.url}\">${metadata.text || item.title || item.uid || (item.system ? item.system.content_type_uid : '')}</a>`,\n};\n","import { EntryEmbedable, EmbeddedItem } from '../Models/embedded-object';\nimport { RenderOption, RenderContentType, RenderItem } from '../options/index';\nimport { EntryAttributes, Metadata } from '../Models/metadata-model';\nimport { defaultOptions } from '../options/default-options';\nimport { EntryNode } from '../Models/json-rte-model';\n\n// This function will find Embedded object present in string\nexport function findEmbeddedEntry(\n  uid: string,\n  contentTypeUid: string,\n  embeddeditems: (EmbeddedItem| EntryNode)[] = [],\n): (EmbeddedItem | EntryNode)[] {\n  return embeddeditems.filter((entry: any) => {\n    if ((entry.uid && (entry as EmbeddedItem).uid === uid && (entry as EmbeddedItem)._content_type_uid === contentTypeUid)|| (entry.system && (entry as EntryNode).system.uid === uid && (entry as EntryNode).system.content_type_uid === contentTypeUid)) {\n      return entry;\n    }\n  });\n}\n\nexport function findEmbeddedAsset(uid: string, embeddedAssets: (EmbeddedItem| EntryNode)[] = []): (EmbeddedItem| EntryNode)[] {\n  return embeddedAssets.filter((asset: any) => {\n    if ((asset.uid && (asset as EmbeddedItem).uid === uid) || asset.system && (asset as EntryNode).system.uid === uid) {\n      return asset;\n    }\n  });\n}\n\nexport function findGQLEmbeddedItems(metadata: Metadata, items: (EmbeddedItem| EntryNode)[]): (EmbeddedItem| EntryNode)[] {\n  if (metadata.itemType === 'entry') {\n    return findEmbeddedEntry(\n        metadata.itemUid,\n        metadata.contentTypeUid,\n        items\n        );\n  } else {\n    return findEmbeddedAsset(\n        metadata.itemUid, \n        items\n        );\n  }\n}\n\nexport function findEmbeddedItems(object: Metadata, entry: EntryEmbedable): (EmbeddedItem| EntryNode)[] {\n  if (object && object !== undefined && entry && entry !== undefined) {\n    if (entry._embedded_items !== undefined) {\n      const entryEmbedable = entry\n      const items = Object.values(entryEmbedable._embedded_items || []).reduce((accumulator, value) => accumulator.concat(value), [])\n      return findGQLEmbeddedItems(object, items)\n    }\n  }\n  return [];\n}\n\nexport function findRenderString(\n  item: EmbeddedItem | EntryNode,\n  metadata: Metadata,\n  renderOptions?: RenderOption,\n): string {\n  if ((!item && item === undefined) || (!metadata && metadata === undefined)) {\n    return '';\n  }\n  \n  if (renderOptions && renderOptions[metadata.styleType] !== undefined) {\n    const renderFunction = renderOptions[metadata.styleType] as RenderItem;\n\n     if (\n      (metadata.attributes as EntryAttributes)['data-sys-content-type-uid'] !== undefined &&\n      typeof renderFunction !== 'function' &&\n      renderFunction[(metadata.attributes as EntryAttributes)['data-sys-content-type-uid']] !== undefined\n    ) {\n      return (renderFunction as RenderContentType)[(metadata.attributes as EntryAttributes)['data-sys-content-type-uid']](item, metadata);\n    } else if (\n      (metadata.attributes as EntryAttributes)['data-sys-content-type-uid'] !== undefined &&\n      typeof renderFunction !== 'function' &&\n      (renderFunction as RenderContentType).$default !== undefined\n    ) {\n      return (renderFunction as RenderContentType).$default(item, metadata);\n    } else if (\n      metadata.contentTypeUid !== undefined &&\n      typeof renderFunction !== 'function' &&\n      renderFunction[metadata.contentTypeUid] !== undefined\n    ) {\n      return (renderFunction as RenderContentType)[metadata.contentTypeUid](item, metadata)\n    } else if (\n      metadata.contentTypeUid !== undefined &&\n      typeof renderFunction !== 'function' &&\n      (renderFunction as RenderContentType).$default !== undefined\n    ) {\n      return (renderFunction as RenderContentType).$default(item, metadata);\n    }  else if (typeof renderFunction === 'function') {\n      return renderFunction(item, metadata);\n    }\n  }\n  const defaultRenderFunction = defaultOptions[metadata.styleType] as RenderItem;  \n  return defaultRenderFunction(item, metadata);\n}\n","import { EntryEmbedable } from '../Models/embedded-object';\nexport function findRenderContent<Type>(keyPaths: string, entry: EntryEmbedable, render: (content: Type) => (string| string[])){\n     getContent(keyPaths.split(\".\"), entry, render)\n}\n\nexport function getContent<Type>(keys: string[], object: any, render: (content: Type) => (string| string[])) {\n    if (keys) {\n        const key = keys[0]\n        if (keys.length === 1 && object[key]) {\n            object[key] = render(object[key])\n        } else if (keys.length > 0) {\n            if (object[key]) {\n                const newKeys = keys.slice(1)\n                if (Array.isArray(object[key])) {\n                    // tslint:disable-next-line: prefer-for-of\n                    for (const objKey of object[key]) {\n                        getContent(newKeys, objKey, render)\n                    }\n                } else if (typeof object[key] === 'object') {\n                    getContent(newKeys, object[key], render)\n                }\n            }\n        }\n    }\n}","import './extensions'\nimport { Option, RenderOption } from './options';\nimport { Metadata } from './Models/metadata-model';\nimport { findEmbeddedItems, findRenderString } from './helper/find-embeded-object';\nimport { EntryEmbedable } from './Models/embedded-object';\nimport { findRenderContent } from './helper/find-render-content';\n/**\n * \n * @param {EntryEmbedable| EntryEmbedable[]} entry - Objects that contains RTE with embedded objects\n * @param {string[]} paths - Key paths for RTE contents in Entry object\n * @param {RenderOption?} renderOption -  Optional render options to render content\n */\nexport function render(option: { \n    entry: EntryEmbedable| EntryEmbedable[],\n    renderOption?: RenderOption,\n    paths?: string[]\n}) {\n\n    function findContent(path: string, entry: EntryEmbedable) {\n        findRenderContent(path, entry, (content: string| string[]) => {\n            return renderContent(content, { entry, renderOption: option.renderOption })\n        })\n    }\n\n    function findAndRender (entry: EntryEmbedable) {\n        if (!option.paths || option.paths.length === 0) {\n            Object.keys({ \n                ...entry._embedded_items,\n            }).forEach((path) => {\n                findContent(path, entry)\n            })\n        } else {\n            option.paths.forEach((path) => {\n                findContent(path, entry)\n            })\n        }\n    }\n\n    if (option.entry instanceof Array) {\n        option.entry.forEach((entry) => {\n            findAndRender(entry)\n        })\n    }else {\n        findAndRender(option.entry as EntryEmbedable)\n    }\n}\n\n/**\n * \n * @param {string | string[]} content - RTE content to render \n * @param {EntryEmbedable} options.entry - Entry object containing embedded objects\n * @param {RenderOption?} options.renderOption - Optional render options to render content\n */\nexport function renderContent(content: (string | string[]), option: Option): (string| string[]) {\n    // return blank if content not present\n    if (!content || content === undefined) {\n        return ''\n    }\n\n    // render content of type string\n    if (typeof content === 'string') {\n        let contentToReplace = content\n        content.forEachEmbeddedItem((embededObjectTag: string, object: Metadata) => {\n            contentToReplace = findAndReplaceEmbeddedItem(\n                contentToReplace,\n                embededObjectTag, \n                object, \n                option)\n        })\n        return contentToReplace\n    }\n\n    // render content of type array of string\n    const resultContent: string[] = []\n    content.forEach((element) => {\n        resultContent.push(renderContent(element, option) as string)\n    })\n    return resultContent\n}\n\nfunction findAndReplaceEmbeddedItem(content:string, embededObjectTag: string, metadata: Metadata, option: Option): string {    \n    const embeddedObjects = findEmbeddedItems(metadata, option.entry)\n    const renderString = findRenderString(embeddedObjects[0], metadata, option.renderOption)\n    return content.replace(embededObjectTag, renderString)\n}\n","enum NodeType {\n    DOCUMENT = 'doc',\n    PARAGRAPH = 'p',\n    \n    LINK = 'a',\n    IMAGE = 'img',\n    EMBED = 'embed',\n\n    HEADING_1 = 'h1',\n    HEADING_2 = 'h2',\n    HEADING_3 = 'h3',\n    HEADING_4 = 'h4',\n    HEADING_5 = 'h5',\n    HEADING_6 = 'h6',\n  \n    ORDER_LIST = 'ol',\n    UNORDER_LIST = 'ul',\n    LIST_ITEM = 'li',\n  \n    HR = 'hr',\n\n    TABLE = 'table',\n    TABLE_HEADER = 'thead',\n    TABLE_BODY = 'tbody',\n    TABLE_FOOTER = 'tfoot',\n    TABLE_ROW = 'tr',\n    TABLE_HEAD = 'th',\n    TABLE_DATA = 'td',\n\n    BLOCK_QUOTE = 'blockquote',\n    CODE = 'code',\n\n    TEXT = 'text',\n    REFERENCE = 'reference'\n}\n\nexport default NodeType;","enum MarkType {\n    BOLD = 'bold',\n    ITALIC = 'italic',\n    UNDERLINE = 'underline',\n\n    STRIKE_THROUGH = 'strikethrough',\n    INLINE_CODE = 'inlineCode',\n\n\n    SUBSCRIPT = 'subscript',\n    SUPERSCRIPT = 'superscript'\n}\n\nexport default MarkType","import { AnyNode } from \"../json-to-html\"\nimport { Attributes } from \"../Models/metadata-model\"\nimport NodeType from \"./node-type\"\n\nexport default class Node {\n    type: NodeType\n    attrs: Attributes\n    children: AnyNode[]\n}","import Node from \"./node\"\nimport NodeType from \"./node-type\"\n\nexport default class Document extends Node {\n    type: NodeType.DOCUMENT\n\n    constructor() {\n        super()\n        this.type = NodeType.DOCUMENT\n    }\n}","import Node from \"./node\"\n\nexport default class TextNode extends Node {\n    bold?: boolean\n    italic?: boolean\n    underline?: boolean\n    strikethrough?: boolean\n    inlineCode?: boolean\n    superscript?: boolean\n    subscript?: boolean\n\n    text: string\n\n    constructor(text: string) {\n        super()\n        this.text = text\n    }\n}\n","import { Next, RenderOption } from \".\";\nimport { attributeToString } from \"../Models/metadata-model\";\nimport MarkType from \"../nodes/mark-type\";\nimport Node from \"../nodes/node\";\nimport NodeType from \"../nodes/node-type\";\n\nexport const defaultNodeOption: RenderOption = {\n    [NodeType.DOCUMENT]:(node: Node) => {\n        return ``\n    },\n    [NodeType.PARAGRAPH]:(node: Node, next: Next) => {\n         return `<p>${next(node.children)}</p>`\n    },\n    [NodeType.LINK]:(node: Node, next: Next) => {\n         return `<a href=\"${node.attrs.href}\">${next(node.children)}</a>`\n    },\n    [NodeType.IMAGE]:(node: Node, next: Next) => {\n        return `<img src=\"${node.attrs.src}\" />${next(node.children)}`\n    },\n    [NodeType.EMBED]:(node: Node, next: Next) => {\n        return `<iframe src=\"${node.attrs.src}\">${next(node.children)}</iframe>`\n    },\n    [NodeType.HEADING_1]:(node: Node, next: Next) => {\n        return `<h1>${next(node.children)}</h1>`\n    },\n    [NodeType.HEADING_2]:(node: Node, next: Next) => {\n        return `<h2>${next(node.children)}</h2>`\n    },\n    [NodeType.HEADING_3]:(node: Node, next: Next) => {\n        return `<h3>${next(node.children)}</h3>`\n    },\n    [NodeType.HEADING_4]:(node: Node, next: Next) => {\n        return `<h4>${next(node.children)}</h4>`\n    },\n    [NodeType.HEADING_5]:(node: Node, next: Next) => {\n        return `<h5>${next(node.children)}</h5>`\n    },\n    [NodeType.HEADING_6]:(node: Node, next: Next) => {\n        return `<h6>${next(node.children)}</h6>`\n    },\n    [NodeType.ORDER_LIST]:(node: Node, next: Next) => {\n        return `<ol>${next(node.children)}</ol>`\n    },\n    [NodeType.UNORDER_LIST]:(node: Node, next: Next) => {\n        return `<ul>${next(node.children)}</ul>`\n    },\n    [NodeType.LIST_ITEM]:(node: Node, next: Next) => {\n        return `<li>${next(node.children)}</li>`\n    },\n    [NodeType.HR]:(node: Node, next: Next) => {\n        return `<hr>`\n    },\n    [NodeType.TABLE]:(node: Node, next: Next) => {\n        return `<table>${next(node.children)}</table>`\n    },\n    [NodeType.TABLE_HEADER]:(node: Node, next: Next) => {\n        return `<thead>${next(node.children)}</thead>`\n    },\n    [NodeType.TABLE_BODY]:(node: Node, next: Next) => {\n        return `<tbody>${next(node.children)}</tbody>`\n    },\n    [NodeType.TABLE_FOOTER]:(node: Node, next: Next) => {\n        return `<tfoot>${next(node.children)}</tfoot>`\n    },\n    [NodeType.TABLE_ROW]:(node: Node, next: Next) => {\n        return `<tr>${next(node.children)}</tr>`\n    },\n    [NodeType.TABLE_HEAD]:(node: Node, next: Next) => {\n        return `<th>${next(node.children)}</th>`\n    },\n    [NodeType.TABLE_DATA]:(node: Node, next: Next) => {\n        return `<td>${next(node.children)}</td>`\n    },\n    [NodeType.BLOCK_QUOTE]:(node: Node, next: Next) => {\n        return `<blockquote>${next(node.children)}</blockquote>`\n    },\n    [NodeType.CODE]:(node: Node, next: Next) => {\n        return `<code>${next(node.children)}</code>`\n    },\n\n    ['reference']:(node: Node, next: Next) => {\n        return ``\n    },\n\n    [MarkType.BOLD]:(text: string) => {\n        return `<strong>${text}</strong>`\n    },\n    [MarkType.ITALIC]:(text: string) => {\n        return `<em>${text}</em>`\n    },\n    [MarkType.UNDERLINE]:(text: string) => {\n        return `<u>${text}</u>`\n    },\n    [MarkType.STRIKE_THROUGH]:(text: string) => {\n        return `<strike>${text}</strike>`\n    },\n    [MarkType.INLINE_CODE]:(text: string) => {\n        return `<span>${text}</span>`\n    },\n    [MarkType.SUBSCRIPT]:(text: string) => {\n        return `<sub>${text}</sub>`\n    },\n    [MarkType.SUPERSCRIPT]:(text: string) => {\n        return `<sup>${text}</sup>`\n    },\n\n}","import { AnyNode } from \"../json-to-html\";\nimport { EmbeddedItem, EntryEmbedable } from \"../Models/embedded-object\";\nimport { Metadata, nodeToMetadata } from \"../Models/metadata-model\";\nimport MarkType from \"../nodes/mark-type\";\nimport TextNode from \"../nodes/text\";\nimport Node from '../nodes/node'\nimport Document from '../nodes/document'\nimport { Next, RenderMark, RenderNode, RenderOption } from \"../options\";\nimport { defaultNodeOption } from \"../options/default-node-options\";\nimport { findRenderString } from \"./find-embeded-object\";\nimport { EntryNode } from \"../Models/json-rte-model\";\n\nexport function enumerate( \n    entries: EntryEmbedable[] | EmbeddedItem[],\n    process: (entry: EntryEmbedable| EmbeddedItem) => void\n    ) {\n    for (const entry of entries) {\n        process(entry)\n    }\n}\n\nexport function enumerateContents(\n    content:Document | Document[], \n    renderOption?: RenderOption,\n    renderEmbed?: (metadata: Metadata) => EmbeddedItem| EntryNode\n): string | string[] {\n    if (!(content instanceof Array) && content.type !== 'doc') {\n        return content as unknown as string\n    } \n    if (content instanceof Array) {\n        const result: string[] = []\n        content.forEach((doc) => {\n            result.push(enumerateContents(doc, renderOption, renderEmbed) as string)\n        })\n        return result\n    } \n    const commonRenderOption = {\n        ...defaultNodeOption,\n        ...renderOption\n    }\n    return nodeChildrenToHTML(content.children, commonRenderOption, renderEmbed)\n}\n\nexport function textNodeToHTML(node: TextNode, renderOption: RenderOption): string {\n    let text = node.text\n    if (node.superscript) {\n        text =  (renderOption[MarkType.SUPERSCRIPT] as RenderMark)(text)\n    }\n    if (node.subscript) {\n        text =  (renderOption[MarkType.SUBSCRIPT] as RenderMark)(text)\n    }\n    if (node.inlineCode) {\n        text =  (renderOption[MarkType.INLINE_CODE] as RenderMark)(text)\n    }\n    if (node.strikethrough) {\n        text =  (renderOption[MarkType.STRIKE_THROUGH] as RenderMark)(text)\n    }\n    if (node.underline) {\n        text =  (renderOption[MarkType.UNDERLINE] as RenderMark)(text)\n    }\n    if (node.italic) {\n        text =  (renderOption[MarkType.ITALIC] as RenderMark)(text)\n    }\n    if (node.bold) {\n        text =  (renderOption[MarkType.BOLD] as RenderMark)(text)\n    }\n    return text\n}\nexport function referenceToHTML(node: Node, \n    renderOption: RenderOption,\n    renderEmbed?: (metadata: Metadata) => EmbeddedItem | EntryNode\n): string {\n    if (!renderEmbed) {\n        return ''\n    }\n    const metadata = nodeToMetadata(node.attrs, ((node.children && node.children.length > 0) ? node.children[0]: {}) as unknown as TextNode)\n    const item = renderEmbed(metadata)\n    return findRenderString(item, metadata, renderOption)\n}\n\nfunction nodeChildrenToHTML(nodes: AnyNode[], \n    renderOption: RenderOption,\n    renderEmbed?: (metadata: Metadata) => EmbeddedItem | EntryNode,\n    ): string {\n        return nodes.map<string>((node: AnyNode) => nodeToHTML(node, renderOption, renderEmbed)).join('')\n}\n\nfunction nodeToHTML(\n    node: AnyNode, \n    renderOption: RenderOption,\n    renderEmbed?: (metadata: Metadata) => EmbeddedItem | EntryNode,\n): string {    \n    if (!node.type) {\n        return textNodeToHTML(node as TextNode, renderOption)\n    }else if ((node.type as string) === 'reference') {\n        return referenceToHTML(node, renderOption, renderEmbed)\n    }else {\n        const next: Next = nodes => nodeChildrenToHTML(nodes, renderOption, renderEmbed)\n        return (renderOption[node.type] as RenderNode)(node, next)\n    }\n}\n","import Node from './nodes/node';\nimport TextNode from './nodes/text';\nimport Document from './nodes/document';\nimport { Metadata } from './Models/metadata-model';\nimport { EntryEmbedable } from './Models/embedded-object';\nimport { findRenderContent } from './helper/find-render-content';\nimport { RenderOption } from './options';\nimport { findEmbeddedItems } from './helper/find-embeded-object';\nimport { enumerate, enumerateContents } from './helper/enumerate-entries';\n\nexport type AnyNode = TextNode | Node;\n\nexport function jsonToHTML(option: { \n    entry: EntryEmbedable| EntryEmbedable[],\n    paths: string[],\n    renderOption?: RenderOption,\n}) {\n    if (option.entry instanceof Array) {\n        enumerate(option.entry, (entry: EntryEmbedable) => {\n            jsonToHTML({entry, paths: option.paths, renderOption: option.renderOption})\n        })\n    } else {\n        enumerateKeys({\n            entry: option.entry,\n            paths: option.paths,\n            renderOption: option.renderOption,\n        })\n    }\n}\n\nfunction enumerateKeys(option: { \n    entry: EntryEmbedable,\n    paths: string[],\n    renderOption?: RenderOption,\n}) {\n    for (const key of option.paths) {\n        findRenderContent(key, option.entry as EntryEmbedable, ((content: Document | Document[]) => {\n            return enumerateContents(content, option.renderOption, (metadata: Metadata) => {\n                return findEmbeddedItems(metadata, option.entry)[0]\n            })\n        }))\n    }\n}\n","import Node from './nodes/node';\nimport TextNode from './nodes/text';\nimport { RenderOption } from './options';\nimport { JsonRTE } from './Models/json-rte-model';\nimport { Metadata } from './Models/metadata-model';\nimport { findRenderContent } from './helper/find-render-content';\nimport { findGQLEmbeddedItems } from './helper/find-embeded-object';\nimport { EmbeddedItem, EntryEmbedable } from './Models/embedded-object';\nimport { enumerate, enumerateContents } from './helper/enumerate-entries';\n\nexport type AnyNode = TextNode | Node;\n\nfunction jsonToHTML(option: { \n    entry: EmbeddedItem| EmbeddedItem[],\n    paths: string[],\n    renderOption?: RenderOption,\n}) {\n    if (option.entry instanceof Array) {\n        enumerate(option.entry, (entry: EmbeddedItem) => {\n            jsonToHTML({entry, paths: option.paths, renderOption: option.renderOption})\n        })\n    } else {\n        enumerateKeys({\n            entry: option.entry,\n            paths: option.paths,\n            renderOption: option.renderOption,\n        })\n    }\n}\n\nfunction enumerateKeys(option: { \n    entry: EntryEmbedable,\n    paths: string[],\n    renderOption?: RenderOption,\n}) {\n    for (const key of option.paths) {\n        findRenderContent(key, \n            option.entry as EntryEmbedable, \n            ((content: JsonRTE) => {\n            if (content && content.json) {\n                const edges = content.embedded_itemsConnection ? content.embedded_itemsConnection.edges : []\n                const items = Object.values(edges || []).reduce((accumulator, value) => accumulator.concat(value.node), [])\n                return enumerateContents(content.json, option.renderOption, (metadata: Metadata) => {\n                    return findGQLEmbeddedItems(metadata, items)[0]\n                })\n            }   \n            return content as unknown as string\n        }))\n    }\n}\nexport const GQL = {\n    jsonToHTML\n}","import { EntryModel } from \".\";\n\nexport function addTags(entry: EntryModel, contentTypeUid: string, tagsAsObject: boolean, locale: string = 'en-us') : void {  \n    if (entry)  \n        // tslint:disable-next-line:no-string-literal\n        entry[\"$\"] = getTag(entry, `${contentTypeUid}.${entry.uid}.${locale}`, tagsAsObject, locale)        \n}\n\nfunction getTag(content: object, prefix: string, tagsAsObject: boolean, locale: string): object {\n    const tags: any = {}\n    Object.entries(content).forEach(([key, value]) => {      \n        switch (typeof value) {\n            case \"object\":\n                if (Array.isArray(value)) {\n                    value.forEach((obj, index) => {\n                        if ((typeof obj !== 'undefined' || obj !== null) && obj._content_type_uid !== undefined && obj.uid !== undefined) {\n                            // tslint:disable-next-line:no-string-literal\n                            value[index]['$'] = getTag(obj, `${obj._content_type_uid}.${obj.uid}.${obj.locale || locale}`, tagsAsObject, locale)\n                        }else {\n                            if (typeof obj === \"object\") {\n                                        // tslint:disable-next-line:no-string-literal\n                                obj['$'] = getTag(obj, `${prefix}.${key}.${index}`, tagsAsObject, locale)\n                            } else {\n                                tags[key] = getTagsValue(`${prefix}.${key}`, tagsAsObject)\n                            }\n                        }\n                    })\n                }else {\n                    if (value) {\n                        // tslint:disable-next-line:no-string-literal\n                        value[\"$\"] = getTag(value, `${prefix}.${key}`, tagsAsObject, locale)\n                    }\n                }\n                break;\n            default:\n                tags[key] = getTagsValue(`${prefix}.${key}`, tagsAsObject)\n        }\n    })\n    return tags\n}\n\nfunction getTagsValue (dataValue:string, tagsAsObject: boolean): any {\n    if (tagsAsObject) {\n        return { \"data-cslp\": dataValue };\n    } else {\n        return `data-cslp=${dataValue}`;\n    }\n}"],"names":["parse","StyleType","NodeType","_a","MarkType","jsonToHTML","enumerateKeys"],"mappings":"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"}