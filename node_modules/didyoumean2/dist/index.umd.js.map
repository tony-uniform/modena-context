{"version":3,"file":"index.umd.js","sources":["../node_modules/fastest-levenshtein/index.js","../src/enums/ReturnTypeEnums.ts","../src/enums/ThresholdTypeEnums.ts","../src/errors.ts","../node_modules/lodash.deburr/index.js","../src/lib/normalizeString.ts","../src/lib/matchItemProcessor.ts","../src/index.ts","../src/lib/fillDefaultOptions.ts","../src/lib/getSimilarity.ts","../src/lib/resultProcessor.ts"],"sourcesContent":["\"use strict\";\nconst peq = new Uint32Array(0x10000);\nconst myers_32 = (a, b) => {\n  const n = a.length;\n  const m = b.length;\n  const lst = 1 << (n - 1);\n  let pv = -1;\n  let mv = 0;\n  let sc = n;\n  let i = n;\n  while (i--) {\n    peq[a.charCodeAt(i)] |= 1 << i;\n  }\n  for (i = 0; i < m; i++) {\n    let eq = peq[b.charCodeAt(i)];\n    const xv = eq | mv;\n    eq |= ((eq & pv) + pv) ^ pv;\n    mv |= ~(eq | pv);\n    pv &= eq;\n    if (mv & lst) {\n      sc++;\n    }\n    if (pv & lst) {\n      sc--;\n    }\n    mv = (mv << 1) | 1;\n    pv = (pv << 1) | ~(xv | mv);\n    mv &= xv;\n  }\n  i = n;\n  while (i--) {\n    peq[a.charCodeAt(i)] = 0;\n  }\n  return sc;\n};\n\nconst myers_x = (a, b) => {\n  const n = a.length;\n  const m = b.length;\n  const mhc = [];\n  const phc = [];\n  const hsize = Math.ceil(n / 32);\n  const vsize = Math.ceil(m / 32);\n  let score = m;\n  for (let i = 0; i < hsize; i++) {\n    phc[i] = -1;\n    mhc[i] = 0;\n  }\n  let j = 0;\n  for (; j < vsize - 1; j++) {\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const end = Math.min(32, m) + start;\n    for (let k = start; k < end; k++) {\n      peq[b.charCodeAt(k)] |= 1 << k;\n    }\n    score = m;\n    for (let i = 0; i < n; i++) {\n      const eq = peq[a.charCodeAt(i)];\n      const pb = (phc[(i / 32) | 0] >>> i) & 1;\n      const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n      const xv = eq | mv;\n      const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n      let ph = mv | ~(xh | pv);\n      let mh = pv & xh;\n      if ((ph >>> 31) ^ pb) {\n        phc[(i / 32) | 0] ^= 1 << i;\n      }\n      if ((mh >>> 31) ^ mb) {\n        mhc[(i / 32) | 0] ^= 1 << i;\n      }\n      ph = (ph << 1) | pb;\n      mh = (mh << 1) | mb;\n      pv = mh | ~(xv | ph);\n      mv = ph & xv;\n    }\n    for (let k = start; k < end; k++) {\n      peq[b.charCodeAt(k)] = 0;\n    }\n  }\n  let mv = 0;\n  let pv = -1;\n  const start = j * 32;\n  const end = Math.min(32, m - start) + start;\n  for (let k = start; k < end; k++) {\n    peq[b.charCodeAt(k)] |= 1 << k;\n  }\n  score = m;\n  for (let i = 0; i < n; i++) {\n    const eq = peq[a.charCodeAt(i)];\n    const pb = (phc[(i / 32) | 0] >>> i) & 1;\n    const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n    const xv = eq | mv;\n    const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n    let ph = mv | ~(xh | pv);\n    let mh = pv & xh;\n    score += (ph >>> (m - 1)) & 1;\n    score -= (mh >>> (m - 1)) & 1;\n    if ((ph >>> 31) ^ pb) {\n      phc[(i / 32) | 0] ^= 1 << i;\n    }\n    if ((mh >>> 31) ^ mb) {\n      mhc[(i / 32) | 0] ^= 1 << i;\n    }\n    ph = (ph << 1) | pb;\n    mh = (mh << 1) | mb;\n    pv = mh | ~(xv | ph);\n    mv = ph & xv;\n  }\n  for (let k = start; k < end; k++) {\n    peq[b.charCodeAt(k)] = 0;\n  }\n  return score;\n};\n\nconst distance = (a, b) => {\n  if (a.length > b.length) {\n    const tmp = b;\n    b = a;\n    a = tmp;\n  }\n  if (a.length === 0) {\n    return b.length;\n  }\n  if (a.length <= 32) {\n    return myers_32(a, b);\n  }\n  return myers_x(a, b);\n};\n\nconst closest = (str, arr) => {\n  let min_distance = Infinity;\n  let min_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    const dist = distance(str, arr[i]);\n    if (dist < min_distance) {\n      min_distance = dist;\n      min_index = i;\n    }\n  }\n  return arr[min_index];\n};\n\nmodule.exports = {\n  closest, distance\n}\n","export enum ReturnTypeEnums {\n  ALL_CLOSEST_MATCHES = 'all-closest-matches',\n  ALL_MATCHES = 'all-matches',\n  ALL_SORTED_MATCHES = 'all-sorted-matches',\n  FIRST_CLOSEST_MATCH = 'first-closest-match',\n  FIRST_MATCH = 'first-match',\n}\n","export enum ThresholdTypeEnums {\n  EDIT_DISTANCE = 'edit-distance',\n  SIMILARITY = 'similarity',\n}\n","export const unknownReturnTypeError = new Error('unknown returnType')\nexport const unknownThresholdTypeError = new Error('unknown thresholdType')\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","import deburr from 'lodash.deburr'\n\nimport type { Options } from '../types'\n\n/**\n * Normalize a string\n *\n * @param {string} str - any string\n * @param {Object} options - options that allows you to modify the behavior\n * @returns {string} - normalized string\n */\nconst normalizeString = (str: string, options: Options): string => {\n  let s = str\n\n  if (options.trimSpaces) {\n    s = s.trim().replace(/\\s+/g, ' ')\n  }\n\n  if (options.deburr) {\n    s = deburr(s)\n  }\n\n  if (!options.caseSensitive) {\n    s = s.toLowerCase()\n  }\n\n  return s\n}\n\nexport default normalizeString\n","import type { MatchItem, Options } from '../types'\nimport normalizeString from './normalizeString'\n\nconst getMatchItemStr = (\n  matchItem: MatchItem,\n  matchPath: Options['matchPath'],\n): string => {\n  const matchItemStr =\n    matchPath.length > 0\n      ? matchPath.reduce<unknown>(\n          (acc, prop) => (acc as any)?.[prop],\n          matchItem,\n        )\n      : matchItem\n  if (typeof matchItemStr !== 'string') return ''\n  return matchItemStr\n}\n\n/**\n * Process matchItem according to options\n *\n * @param {Object|string} matchItem - Item for matching with `input`\n * @param {Object} options - options that allows you to modify the behavior\n * @returns {string} - processed matchItem\n */\nconst matchItemProcessor = (matchItem: MatchItem, options: Options): string => {\n  const { matchPath } = options\n\n  const matchItemStr = getMatchItemStr(matchItem, matchPath)\n\n  return normalizeString(matchItemStr, options)\n}\n\nexport default matchItemProcessor\n","import { distance } from 'fastest-levenshtein'\n\nimport { ReturnTypeEnums } from './enums/ReturnTypeEnums'\nimport { ThresholdTypeEnums } from './enums/ThresholdTypeEnums'\nimport { unknownReturnTypeError, unknownThresholdTypeError } from './errors'\nimport fillDefaultOptions from './lib/fillDefaultOptions'\nimport getSimilarity from './lib/getSimilarity'\nimport matchItemProcessor from './lib/matchItemProcessor'\nimport normalizeString from './lib/normalizeString'\nimport resultProcessor from './lib/resultProcessor'\nimport type { MatchItem, Options } from './types'\n\nfunction didYouMean<T extends MatchItem>(\n  input: string,\n  matchList: ReadonlyArray<T>,\n  options?: Partial<Options> &\n    Readonly<{\n      returnType?:\n        | ReturnTypeEnums.FIRST_CLOSEST_MATCH\n        | ReturnTypeEnums.FIRST_MATCH\n    }>,\n): T | null\nfunction didYouMean<T extends MatchItem>(\n  input: string,\n  matchList: ReadonlyArray<T>,\n  options: Partial<Options> &\n    Readonly<{\n      returnType:\n        | ReturnTypeEnums.ALL_CLOSEST_MATCHES\n        | ReturnTypeEnums.ALL_MATCHES\n        | ReturnTypeEnums.ALL_SORTED_MATCHES\n    }>,\n): Array<T>\n/**\n * Main function for didyoumean2\n *\n * @param {string} input - string that you are not sure and want to match with `matchList`\n * @param {Object[]|string[]} matchList - List for matching with `input`\n * @param {null|Object|undefined} options - options that allows you to modify the behavior\n * @returns {Array|null|Object|string} - matched result(s), return object if `match` is `{Object[]}`\n */\nfunction didYouMean<T extends MatchItem>(\n  input: string,\n  matchList: ReadonlyArray<T>,\n  options?: Partial<Options>,\n): Array<T> | T | null {\n  /*+++++++++++++++++++\n   + Initiate options +\n   +++++++++++++++++++*/\n\n  const optionsWithDefaults = fillDefaultOptions(options)\n\n  const { returnType, threshold, thresholdType } = optionsWithDefaults\n\n  /*++++++++++++++++++++\n   + Deal with options +\n   ++++++++++++++++++++*/\n\n  const normalizedInput = normalizeString(input, optionsWithDefaults)\n\n  let checkIfMatched: (score: number) => boolean // Validate if score is matched\n  let scoreProcessor: (matchItem: T) => number // Get score\n  switch (thresholdType) {\n    case ThresholdTypeEnums.EDIT_DISTANCE:\n      checkIfMatched = (score: number) => score <= threshold\n      scoreProcessor = (matchItem: T) =>\n        distance(\n          normalizedInput,\n          matchItemProcessor(matchItem, optionsWithDefaults),\n        )\n      break\n\n    case ThresholdTypeEnums.SIMILARITY:\n      checkIfMatched = (score: number) => score >= threshold\n      scoreProcessor = (matchItem: T) =>\n        getSimilarity(\n          normalizedInput,\n          matchItemProcessor(matchItem, optionsWithDefaults),\n        )\n      break\n\n    /* istanbul ignore next */ default:\n      throw unknownThresholdTypeError\n  }\n\n  /*+++++++++++\n   + Matching +\n   +++++++++++*/\n\n  const matchedIndexes: number[] = []\n  const matchListLen = matchList.length\n\n  switch (returnType) {\n    case ReturnTypeEnums.ALL_CLOSEST_MATCHES:\n    case ReturnTypeEnums.FIRST_CLOSEST_MATCH: {\n      const scores: number[] = []\n\n      let marginValue: number\n      switch (thresholdType) {\n        case ThresholdTypeEnums.EDIT_DISTANCE:\n          // Process score and save the smallest score\n          marginValue = Infinity\n          for (let i = 0; i < matchListLen; i += 1) {\n            const score = scoreProcessor(matchList[i])\n\n            if (marginValue > score) marginValue = score\n\n            scores.push(score)\n          }\n          break\n\n        case ThresholdTypeEnums.SIMILARITY:\n          // Process score and save the largest score\n          marginValue = 0\n          for (let i = 0; i < matchListLen; i += 1) {\n            const score = scoreProcessor(matchList[i])\n\n            if (marginValue < score) marginValue = score\n\n            scores.push(score)\n          }\n          break\n\n        /* istanbul ignore next */ default:\n          throw unknownThresholdTypeError\n      }\n\n      const scoresLen = scores.length\n      for (let i = 0; i < scoresLen; i += 1) {\n        const score = scores[i]\n\n        if (checkIfMatched(score) && score === marginValue) {\n          matchedIndexes.push(i)\n        }\n      }\n\n      break\n    }\n\n    case ReturnTypeEnums.ALL_MATCHES:\n      for (let i = 0; i < matchListLen; i += 1) {\n        const score = scoreProcessor(matchList[i])\n\n        // save all indexes of matched scores\n        if (checkIfMatched(score)) {\n          matchedIndexes.push(i)\n        }\n      }\n\n      break\n\n    case ReturnTypeEnums.ALL_SORTED_MATCHES: {\n      const unsortedResults: Array<{\n        score: number\n        index: number\n      }> = []\n      for (let i = 0; i < matchListLen; i += 1) {\n        const score = scoreProcessor(matchList[i])\n\n        // save all indexes of matched scores\n        if (checkIfMatched(score)) {\n          unsortedResults.push({\n            score,\n            index: i,\n          })\n        }\n      }\n\n      switch (thresholdType) {\n        case ThresholdTypeEnums.EDIT_DISTANCE:\n          unsortedResults.sort((a, b) => a.score - b.score)\n          break\n\n        case ThresholdTypeEnums.SIMILARITY:\n          unsortedResults.sort((a, b) => b.score - a.score)\n          break\n\n        /* istanbul ignore next */ default:\n          throw unknownThresholdTypeError\n      }\n\n      for (const unsortedResult of unsortedResults) {\n        matchedIndexes.push(unsortedResult.index)\n      }\n\n      break\n    }\n\n    case ReturnTypeEnums.FIRST_MATCH:\n      for (let i = 0; i < matchListLen; i += 1) {\n        const score = scoreProcessor(matchList[i])\n\n        // Return once matched, performance is main target in this returnType\n        if (checkIfMatched(score)) {\n          matchedIndexes.push(i)\n          break\n        }\n      }\n\n      break\n\n    /* istanbul ignore next */ default:\n      throw unknownReturnTypeError\n  }\n\n  /*+++++++++++++++++++++++\n   + Process return value +\n   +++++++++++++++++++++++*/\n\n  return resultProcessor(matchList, matchedIndexes, returnType)\n}\n\nexport default didYouMean\nexport { ReturnTypeEnums, ThresholdTypeEnums }\n","import { ReturnTypeEnums } from '../enums/ReturnTypeEnums'\nimport { ThresholdTypeEnums } from '../enums/ThresholdTypeEnums'\nimport { unknownThresholdTypeError } from '../errors'\nimport type { Options } from '../types'\n\nconst fillDefaultOptions = (options?: Partial<Options>): Options => {\n  const optionsWithDefaultValues = {\n    caseSensitive: false,\n    deburr: true,\n    matchPath: [],\n    returnType: ReturnTypeEnums.FIRST_CLOSEST_MATCH,\n    thresholdType: ThresholdTypeEnums.SIMILARITY,\n    trimSpaces: true,\n    ...options,\n  }\n\n  switch (optionsWithDefaultValues.thresholdType) {\n    case ThresholdTypeEnums.EDIT_DISTANCE:\n      return {\n        threshold: 20,\n        ...optionsWithDefaultValues,\n      }\n\n    case ThresholdTypeEnums.SIMILARITY:\n      return {\n        threshold: 0.4,\n        ...optionsWithDefaultValues,\n      }\n\n    default:\n      throw unknownThresholdTypeError\n  }\n}\nexport default fillDefaultOptions\n","import { distance } from 'fastest-levenshtein'\n\n/**\n * Using edit distance between `a` and `b` to calculate similarity\n *\n * @param {string} a - `input`\n * @param {string} b - String from `matchList`\n * @returns {number} similarity between `a` and `b`\n */\nconst getSimilarity = (a: string, b: string): number => {\n  if (!a || !b) return 0\n  if (a === b) return 1\n\n  const editDistance = distance(a, b)\n  const longestLength = Math.max(a.length, b.length)\n\n  return (longestLength - editDistance) / longestLength\n}\n\nexport default getSimilarity\n","import { ReturnTypeEnums } from '../enums/ReturnTypeEnums'\nimport { unknownReturnTypeError } from '../errors'\n\n/**\n * Generate result\n *\n * @param {Object[]|string[]} matchList - List for matching with `input`\n * @param {number[]} matchedIndexes - indexes of matchList that need to be returned as result\n * @param {ReturnTypeEnums} returnType - how the result will response to user\n * @returns {Array|null|Object|string} - matched result(s), return object if `match` is `{Object[]}`\n */\nconst resultProcessor = <T>(\n  matchList: ReadonlyArray<T>,\n  matchedIndexes: ReadonlyArray<number>,\n  returnType: ReturnTypeEnums,\n): Array<T> | T | null => {\n  switch (returnType) {\n    case ReturnTypeEnums.ALL_CLOSEST_MATCHES:\n    case ReturnTypeEnums.ALL_MATCHES:\n    case ReturnTypeEnums.ALL_SORTED_MATCHES:\n      return matchedIndexes.map((matchedIndex) => matchList[matchedIndex])\n\n    case ReturnTypeEnums.FIRST_CLOSEST_MATCH:\n    case ReturnTypeEnums.FIRST_MATCH:\n      if (!matchedIndexes.length) return null\n      return matchList[matchedIndexes[0]]\n\n    default:\n      throw unknownReturnTypeError\n  }\n}\n\nexport default resultProcessor\n"],"names":["peq","Uint32Array","distance","a","b","length","tmp","n","m","lst","pv","mv","sc","i","charCodeAt","eq","xv","myers_32","mhc","phc","hsize","Math","ceil","vsize","score","j","start","end","min","k","pb","mb","xh","ph","mh","myers_x","ReturnTypeEnums","ThresholdTypeEnums","module","unknownReturnTypeError","Error","unknownThresholdTypeError","symbolTag","reLatin","reComboMark","RegExp","freeGlobal","global","Object","freeSelf","self","root","Function","object","deburrLetter","key","undefined","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","baseToString","value","isObjectLike","call","isSymbol","result","string","replace","normalizeString","str","options","s","trimSpaces","trim","deburr","caseSensitive","toLowerCase","matchItemProcessor","matchItem","matchPath","matchItemStr","reduce","acc","prop","getMatchItemStr","input","matchList","optionsWithDefaults","optionsWithDefaultValues","returnType","FIRST_CLOSEST_MATCH","thresholdType","SIMILARITY","EDIT_DISTANCE","threshold","fillDefaultOptions","normalizedInput","checkIfMatched","scoreProcessor","editDistance","longestLength","max","getSimilarity","matchedIndexes","matchListLen","ALL_CLOSEST_MATCHES","scores","marginValue","Infinity","push","scoresLen","ALL_MATCHES","ALL_SORTED_MATCHES","unsortedResults","index","sort","unsortedResult","FIRST_MATCH","map","matchedIndex","resultProcessor"],"mappings":"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"}