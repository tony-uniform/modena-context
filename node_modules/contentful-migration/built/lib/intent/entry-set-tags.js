"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const base_intent_1 = __importDefault(require("./base-intent"));
const entry_set_tags_1 = require("../action/entry-set-tags");
const chalk_1 = __importDefault(require("chalk"));
class EntrySetTagsIntent extends base_intent_1.default {
    isEntrySetTags() {
        return true;
    }
    endsGroup() {
        return true;
    }
    groupsWith() {
        return false;
    }
    requiresAllTags() {
        return true;
    }
    toActions() {
        return [
            new entry_set_tags_1.EntrySetTagsAction(this.getContentTypeId(), this.payload.entryTransformationForTags.from, this.payload.entryTransformationForTags.setTagsForEntry)
        ];
    }
    toPlanMessage() {
        return {
            heading: chalk_1.default `Updating tags on entries for {bold.yellow ${this.getContentTypeId()}}`,
            details: [
                `from: ${this.payload.entryTransformationForTags.from}`
            ],
            sections: []
        };
    }
    shouldSave() {
        return true;
    }
    shouldPublish() {
        return false;
    }
}
exports.default = EntrySetTagsIntent;
//# sourceMappingURL=entry-set-tags.js.map