"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const base_intent_1 = __importDefault(require("./base-intent"));
const chalk_1 = __importDefault(require("chalk"));
const editorinterface_save_1 = require("../action/editorinterface-save");
const entryeditors_configure_1 = require("../action/entryeditors-configure");
class EntryEditorsConfigureIntent extends base_intent_1.default {
    isEditorInterfaceIntent() {
        return true;
    }
    isGroupable() {
        return false;
    }
    groupsWith() {
        return false;
    }
    endsGroup() {
        return false;
    }
    shouldSave() {
        return false;
    }
    shouldPublish() {
        return false;
    }
    toActions() {
        return [
            new entryeditors_configure_1.EntryEditorsConfigureAction(this.payload.contentTypeId, this.payload.entryEditors),
            new editorinterface_save_1.SaveEditorInterfaceAction(this.payload.contentTypeId)
        ];
    }
    toPlanMessage() {
        return {
            heading: chalk_1.default `Configure entry editors interface for content type {bold.yellow ${this.getContentTypeId()}}`,
            details: [],
            sections: []
        };
    }
}
exports.default = EntryEditorsConfigureIntent;
//# sourceMappingURL=entryeditors-configure.js.map