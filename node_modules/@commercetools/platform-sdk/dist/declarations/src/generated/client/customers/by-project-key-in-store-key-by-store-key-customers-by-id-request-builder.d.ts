/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { Customer, CustomerUpdate } from '../../models/customer';
import { executeRequest, QueryParam } from '../../shared/utils/common-types';
import { ApiRequest } from '../../shared/utils/requests-utils';
export declare class ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    /**
     *	Returns a customer by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.
     *	It also considers customers that do not have the stores field.
     *	If the customer exists in the commercetools project but the stores field references different stores,
     *	this method returns a ResourceNotFound error.
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Customer>;
    /**
     *	Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
     *	If the customer exists in the commercetools project but the stores field references a different store,
     *	this method returns a ResourceNotFound error.
     *
     */
    post(methodArgs: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: CustomerUpdate;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Customer>;
    delete(methodArgs: {
        queryArgs: {
            dataErasure?: boolean;
            version: number;
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Customer>;
}
