import { stringify } from 'querystring';

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function isDefined(value) {
  return typeof value !== 'undefined' && value !== null;
}

function cleanObject(obj) {
  return Object.keys(obj).reduce(function (result, key) {
    var value = obj[key];

    if (Array.isArray(value)) {
      var values = value.filter(isDefined);

      if (!values.length) {
        return result;
      }

      return _objectSpread2(_objectSpread2({}, result), {}, _defineProperty({}, key, values));
    }

    if (isDefined(value)) {
      return _objectSpread2(_objectSpread2({}, result), {}, _defineProperty({}, key, value));
    }

    return result;
  }, {});
}

function formatQueryString(variableMap) {
  var map = cleanObject(variableMap);
  var result = stringify(map);

  if (result === '') {
    return '';
  }

  return "?".concat(result);
}

function buildRelativeUri(commonRequest) {
  var pathMap = commonRequest.pathVariables;
  var uri = commonRequest.uriTemplate;

  for (var param in pathMap) {
    uri = uri.replace("{".concat(param, "}"), "".concat(pathMap[param]));
  }

  var resQuery = formatQueryString(commonRequest.queryParams || {});
  return "".concat(uri).concat(resQuery);
}

var ApiRequest = /*#__PURE__*/function () {
  function ApiRequest(request, requestExecutor) {
    _classCallCheck(this, ApiRequest);

    this.requestExecutor = requestExecutor;

    _defineProperty(this, "request", void 0);

    this.request = _objectSpread2(_objectSpread2({}, request), {}, {
      uri: buildRelativeUri(request)
    });
  }

  _createClass(ApiRequest, [{
    key: "clientRequest",
    value: function clientRequest() {
      return this.request;
    }
  }, {
    key: "execute",
    value: function execute() {
      return this.requestExecutor(this.request);
    }
  }]);

  return ApiRequest;
}();

var ByProjectKeyApiClientsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyApiClientsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyApiClientsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Get ApiClient by ID
   */


  _createClass(ByProjectKeyApiClientsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/api-clients/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
    /**
     *	Delete ApiClient by ID
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/api-clients/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyApiClientsByIDRequestBuilder;
}();

var ByProjectKeyApiClientsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyApiClientsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyApiClientsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyApiClientsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyApiClientsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/api-clients',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/api-clients',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyApiClientsRequestBuilder;
}();

var ByProjectKeyCartDiscountsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartDiscountsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartDiscountsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartDiscountsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/cart-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/cart-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/cart-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartDiscountsByIDRequestBuilder;
}();

var ByProjectKeyCartDiscountsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartDiscountsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartDiscountsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartDiscountsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/cart-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/cart-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/cart-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartDiscountsKeyByKeyRequestBuilder;
}();

var ByProjectKeyCartDiscountsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartDiscountsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartDiscountsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartDiscountsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCartDiscountsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCartDiscountsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/cart-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/cart-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartDiscountsRequestBuilder;
}();

var ByProjectKeyCartsReplicateRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsReplicateRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsReplicateRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartsReplicateRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts/replicate',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsReplicateRequestBuilder;
}();

var ByProjectKeyCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsByIDRequestBuilder;
}();

var ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the active cart of the customer that has been modified most recently.
   *	It does not consider carts with CartOrigin Merchant. If no active cart exists, a 404 Not Found error is returned.
   *
   *	The cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,
   *	send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts/customer-id={customerId}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder;
}();

var ByProjectKeyCartsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyCartsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsKeyByKeyRequestBuilder;
}();

var ByProjectKeyCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCartsRequestBuilder, [{
    key: "replicate",
    value: function replicate() {
      return new ByProjectKeyCartsReplicateRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withCustomerId",
    value: function withCustomerId(childPathArgs) {
      return new ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCartsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCartsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creating a cart can fail with an InvalidOperation if the referenced shipping method in the
     *	CartDraft has a predicate which does not match the cart.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCartsRequestBuilder;
}();

var ByProjectKeyCategoriesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCategoriesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCategoriesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCategoriesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCategoriesByIDRequestBuilder;
}();

var ByProjectKeyCategoriesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCategoriesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCategoriesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCategoriesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCategoriesKeyByKeyRequestBuilder;
}();

var ByProjectKeyCategoriesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCategoriesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCategoriesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCategoriesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCategoriesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCategoriesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creating a category produces the CategoryCreated message.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCategoriesRequestBuilder;
}();

var ByProjectKeyChannelsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyChannelsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyChannelsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyChannelsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/channels/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/channels/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/channels/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyChannelsByIDRequestBuilder;
}();

var ByProjectKeyChannelsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyChannelsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyChannelsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyChannelsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyChannelsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/channels',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/channels',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyChannelsRequestBuilder;
}();

var ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Get CustomObject by container and key
   */


  _createClass(ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Delete CustomObject by container and key
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder;
}();

var ByProjectKeyCustomObjectsByContainerRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomObjectsByContainerRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomObjectsByContainerRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomObjectsByContainerRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/custom-objects/{container}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomObjectsByContainerRequestBuilder;
}();

var ByProjectKeyCustomObjectsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomObjectsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomObjectsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomObjectsRequestBuilder, [{
    key: "withContainerAndKey",
    value: function withContainerAndKey(childPathArgs) {
      return new ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withContainer",
    value: function withContainer(childPathArgs) {
      return new ByProjectKeyCustomObjectsByContainerRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The query endpoint allows to retrieve custom objects in a specific container or all custom objects.
     *	For performance reasons, it is highly advisable to query only for custom objects in a container by using
     *	the container field in the where predicate.
     *
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/custom-objects',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates a new custom object or updates an existing custom object.
     *	If an object with the given container/key exists,
     *	the object will be replaced with the new value and the version is incremented.
     *	If the request contains a version and an object with the given container/key exists then the version
     *	must match the version of the existing object. Concurrent updates for the same custom object still can result
     *	in a Conflict (409) even if the version is not provided.
     *	Fields with null values will not be saved.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/custom-objects',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomObjectsRequestBuilder;
}();

var ByProjectKeyCustomerGroupsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomerGroupsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomerGroupsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomerGroupsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customer-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customer-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customer-groups/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomerGroupsByIDRequestBuilder;
}();

var ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customer-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customer-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customer-groups/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder;
}();

var ByProjectKeyCustomerGroupsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomerGroupsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomerGroupsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomerGroupsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCustomerGroupsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customer-groups',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customer-groups',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomerGroupsRequestBuilder;
}();

var ByProjectKeyCustomersEmailConfirmRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersEmailConfirmRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersEmailConfirmRequestBuilder);

    this.args = args;
  }
  /**
   *	Verifies customer's email using a token.
   */


  _createClass(ByProjectKeyCustomersEmailConfirmRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/email/confirm',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersEmailConfirmRequestBuilder;
}();

var ByProjectKeyCustomersEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersEmailTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	Create a Token for verifying the Customer's Email
   */


  _createClass(ByProjectKeyCustomersEmailTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/email-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersEmailTokenRequestBuilder;
}();

var ByProjectKeyCustomersPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	The token value is used to reset the password of the customer with the given email. The token is
   *	valid only for 10 minutes.
   *
   */


  _createClass(ByProjectKeyCustomersPasswordTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/password-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordTokenRequestBuilder;
}();

var ByProjectKeyCustomersPasswordRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordRequestBuilder);

    this.args = args;
  }
  /**
   *	Change a customers password
   */


  _createClass(ByProjectKeyCustomersPasswordRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/password',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordRequestBuilder;
}();

var ByProjectKeyCustomersPasswordResetRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordResetRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordResetRequestBuilder);

    this.args = args;
  }
  /**
   *	Set a new password using a token.
   */


  _createClass(ByProjectKeyCustomersPasswordResetRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/password/reset',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordResetRequestBuilder;
}();

var ByProjectKeyCustomersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersByIDRequestBuilder;
}();

var ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/email-token={emailToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder;
}();

var ByProjectKeyCustomersKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersKeyByKeyRequestBuilder;
}();

var ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers/password-token={passwordToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder;
}();

var ByProjectKeyCustomersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyCustomersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyCustomersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyCustomersRequestBuilder, [{
    key: "withPasswordToken",
    value: function withPasswordToken(childPathArgs) {
      return new ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withEmailToken",
    value: function withEmailToken(childPathArgs) {
      return new ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	To verify a customer's email, an email token can be created. This should be embedded in a link and sent to the
     *	customer via email. When the customer clicks on the link, the "verify customer's email" endpoint should be called,
     *	which sets customer's isVerifiedEmail field to true.
     *
     */

  }, {
    key: "emailToken",
    value: function emailToken() {
      return new ByProjectKeyCustomersEmailTokenRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "emailConfirm",
    value: function emailConfirm() {
      return new ByProjectKeyCustomersEmailConfirmRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "password",
    value: function password() {
      return new ByProjectKeyCustomersPasswordRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "passwordReset",
    value: function passwordReset() {
      return new ByProjectKeyCustomersPasswordResetRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The following workflow can be used to reset the customer's password:
     *
     *	* Create a password reset token and send it embedded in a link to the customer.
     *	* When the customer clicks on the link, the customer is retrieved with the token.
     *	* The customer enters a new password and the "reset customer's password" endpoint is called.
     *
     */

  }, {
    key: "passwordToken",
    value: function passwordToken() {
      return new ByProjectKeyCustomersPasswordTokenRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyCustomersKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyCustomersByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates a customer. If an anonymous cart is passed in,
     *	then the cart is assigned to the created customer and the version number of the Cart will increase.
     *	If the ID of an anonymous session is given, all carts and orders will be assigned to the created customer.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyCustomersRequestBuilder;
}();

var ByProjectKeyDiscountCodesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyDiscountCodesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyDiscountCodesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyDiscountCodesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/discount-codes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/discount-codes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/discount-codes/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyDiscountCodesByIDRequestBuilder;
}();

var ByProjectKeyDiscountCodesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyDiscountCodesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyDiscountCodesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyDiscountCodesRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyDiscountCodesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/discount-codes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/discount-codes',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyDiscountCodesRequestBuilder;
}();

var ByProjectKeyExtensionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyExtensionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyExtensionsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the representation of an extension by its id.
   */


  _createClass(ByProjectKeyExtensionsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/extensions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/extensions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/extensions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyExtensionsByIDRequestBuilder;
}();

var ByProjectKeyExtensionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyExtensionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyExtensionsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the representation of an extension by its key.
   */


  _createClass(ByProjectKeyExtensionsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/extensions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/extensions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/extensions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyExtensionsKeyByKeyRequestBuilder;
}();

var ByProjectKeyExtensionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyExtensionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyExtensionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyExtensionsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyExtensionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyExtensionsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/extensions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Currently, a maximum of 25 extensions can be created per project.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/extensions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyExtensionsRequestBuilder;
}();

var ByProjectKeyGraphqlRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyGraphqlRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyGraphqlRequestBuilder);

    this.args = args;
  }
  /**
   *	Execute a GraphQL query
   */


  _createClass(ByProjectKeyGraphqlRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/graphql',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/graphql'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyGraphqlRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/replicate',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns a cart by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	If the cart exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
     *	If the cart exists in the commercetools project but does not have the store field,
     *	or the store field references a different store, this method returns a ResourceNotFound error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the active cart of the customer that has been modified most recently in a specific Store.
   *	The {storeKey} path parameter maps to a Store's key.
   *
   *	If the cart exists in the commercetools project but does not have the store field, or the store field
   *	references a different store, this method returns a ResourceNotFound error.
   *
   *	The cart may not contain up-to-date prices, discounts etc. If you want to ensure they're up-to-date,
   *	send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns a cart by its key from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	If the cart exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	The cart may not contain up-to-date prices, discounts etc.
   *	If you want to ensure they're up-to-date, send an Update request with the Recalculate update action instead.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
     *	If the cart exists in the commercetools project but does not have the store field,
     *	or the store field references a different store, this method returns a ResourceNotFound error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder, [{
    key: "withCustomerId",
    value: function withCustomerId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "replicate",
    value: function replicate() {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Queries carts in a specific Store. The {storeKey} path parameter maps to a Store's key.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates a cart in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
     *	When using this endpoint the cart's store field is always set to the store specified in the path parameter.
     *	Creating a cart can fail with an InvalidOperation if the referenced shipping method
     *	in the CartDraft has a predicate which does not match the cart.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder);

    this.args = args;
  }
  /**
   *	Verifies customer's email using a token.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email/confirm',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	Create a Token for verifying the Customer's Email in store
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder);

    this.args = args;
  }
  /**
   *	The token value is used to reset the password of the customer with the given email. The token is
   *	valid only for 10 minutes.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder);

    this.args = args;
  }
  /**
   *	Change a customers password
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder);

    this.args = args;
  }
  /**
   *	Set a new password using a token.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password/reset',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns a customer by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	It also considers customers that do not have the stores field.
   *	If the customer exists in the commercetools project but the stores field references different stores,
   *	this method returns a ResourceNotFound error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates a customer in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
     *	If the customer exists in the commercetools project but the stores field references a different store,
     *	this method returns a ResourceNotFound error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns a customer by its Key from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	It also considers customers that do not have the stores field.
   *	If the customer exists in the commercetools project but the stores field references different stores,
   *	this method returns a ResourceNotFound error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	If the customer exists in the commercetools project but the stores field references a different store,
     *	this method returns a ResourceNotFound error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder, [{
    key: "withPasswordToken",
    value: function withPasswordToken(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withEmailToken",
    value: function withEmailToken(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	To verify a customer's email, an email token can be created. This should be embedded in a link and sent to the
     *	customer via email. When the customer clicks on the link,
     *	the "verify customer's email" endpoint should be called,
     *	which sets customer's isVerifiedEmail field to true.
     *
     */

  }, {
    key: "emailToken",
    value: function emailToken() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "emailConfirm",
    value: function emailConfirm() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "password",
    value: function password() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "passwordReset",
    value: function passwordReset() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The following workflow can be used to reset the customer's password:
     *
     *	* Create a password reset token and send it embedded in a link to the customer.
     *	* When the customer clicks on the link, the customer is retrieved with the token.
     *	* The customer enters a new password and the "reset customer's password" endpoint is called.
     *
     */

  }, {
    key: "passwordToken",
    value: function passwordToken() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates a customer in a specific Store. The {storeKey} path parameter maps to a Store's key.
     *	When using this endpoint, if omitted,
     *	the customer's stores field is set to the store specified in the path parameter.
     *	If an anonymous cart is passed in as when using this method,
     *	then the cart is assigned to the created customer and the version number of the Cart increases.
     *	If the ID of an anonymous session is given, all carts and orders will be assigned to the created customer and
     *	the store specified. If you pass in a cart with a store field specified,
     *	the store field must reference the same store specified in the {storeKey} path parameter.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder);

    this.args = args;
  }
  /**
   *	Authenticate Customer (Sign In) in store
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/login',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/active-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets a shopping list by ID.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets a shopping list by Key.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Update a shopping list found by its Key.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder);

    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder, [{
    key: "carts",
    value: function carts() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a order, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "activeCart",
    value: function activeCart() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	shopping-lists e.g. for wishlist support
     *
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns an order by its ID from a specific Store. The {storeKey} path parameter maps to a Store's key.
   *	If the order exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
     *	If the order exists in the commercetools project but does not have the store field,
     *	or the store field references a different store, this method returns a ResourceNotFound error.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder);

    this.args = args;
  }
  /**
   *	Returns an order by its order number from a specific Store.
   *	The {storeKey} path parameter maps to a Store's key.
   *	If the order exists in the commercetools project but does not have the store field,
   *	or the store field references a different store, this method returns a ResourceNotFound error.
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Updates an order in the store specified by {storeKey}. The {storeKey} path parameter maps to a Store's key.
     *	If the order exists in the commercetools project but does not have the store field,
     *	or the store field references a different store, this method returns a ResourceNotFound error.
     *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
     *	it should be provided in URL-encoded format.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder, [{
    key: "withOrderNumber",
    value: function withOrderNumber(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Queries orders in a specific Store. The {storeKey} path parameter maps to a Store's key.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates an order from a Cart from a specific Store. The {storeKey} path parameter maps to a Store's key.
     *	When using this endpoint the orders's store field is always set to the store specified in the path parameter.
     *	The cart must have a shipping address set before creating an order. When using the Platform TaxMode,
     *	the shipping address is used for tax calculation.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder);

    this.args = args;
  }
  /**
   *	Get ShippingMethods for a cart in a store
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder, [{
    key: "matchingCart",
    value: function matchingCart() {
      return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets a shopping list by ID.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets a shopping list by Key.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Update a shopping list found by its Key.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder;
}();

var ByProjectKeyInStoreKeyByStoreKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInStoreKeyByStoreKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInStoreKeyByStoreKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	A shopping cart holds product variants and can be ordered.
   */


  _createClass(ByProjectKeyInStoreKeyByStoreKeyRequestBuilder, [{
    key: "carts",
    value: function carts() {
      return new ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a cart, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "me",
    value: function me() {
      return new ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A customer is a person purchasing products. customers, Orders,
     *	Comments and Reviews can be associated to a customer.
     *
     */

  }, {
    key: "customers",
    value: function customers() {
      return new ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Retrieves the authenticated customer.
     */

  }, {
    key: "login",
    value: function login() {
      return new ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "shippingMethods",
    value: function shippingMethods() {
      return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	shopping-lists e.g. for wishlist support
     *
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }]);

  return ByProjectKeyInStoreKeyByStoreKeyRequestBuilder;
}();

var ByProjectKeyInventoryByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInventoryByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInventoryByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInventoryByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/inventory/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/inventory/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/inventory/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInventoryByIDRequestBuilder;
}();

var ByProjectKeyInventoryRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyInventoryRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyInventoryRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyInventoryRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyInventoryByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/inventory',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/inventory',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyInventoryRequestBuilder;
}();

var ByProjectKeyLoginRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyLoginRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyLoginRequestBuilder);

    this.args = args;
  }
  /**
   *	Authenticate Customer (Sign In). Retrieves the authenticated
   *	customer (a customer that matches the given email/password pair).
   *	If used with an access token for Anonymous Sessions,
   *	all orders and carts belonging to the anonymousId will be assigned to the newly created customer.
   *	If a cart is is returned as part of the CustomerSignInResult,
   *	it has been recalculated (It will have up-to-date prices, taxes and discounts,
   *	and invalid line items have been removed.).
   *
   */


  _createClass(ByProjectKeyLoginRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/login',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyLoginRequestBuilder;
}();

var ByProjectKeyMeActiveCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeActiveCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeActiveCartRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeActiveCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/active-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeActiveCartRequestBuilder;
}();

var ByProjectKeyMeCartsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeCartsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeCartsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeCartsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/carts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeCartsByIDRequestBuilder;
}();

var ByProjectKeyMeCartsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeCartsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeCartsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeCartsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/carts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeCartsKeyByKeyRequestBuilder;
}();

var ByProjectKeyMeCartsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeCartsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeCartsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeCartsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMeCartsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeCartsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/carts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeCartsRequestBuilder;
}();

var ByProjectKeyMeEmailConfirmRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeEmailConfirmRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeEmailConfirmRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeEmailConfirmRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/email/confirm',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeEmailConfirmRequestBuilder;
}();

var ByProjectKeyMeLoginRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeLoginRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeLoginRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeLoginRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/login',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeLoginRequestBuilder;
}();

var ByProjectKeyMeOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeOrdersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeOrdersByIDRequestBuilder;
}();

var ByProjectKeyMeOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeOrdersRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeOrdersByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeOrdersRequestBuilder;
}();

var ByProjectKeyMePasswordResetRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePasswordResetRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePasswordResetRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePasswordResetRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/password/reset',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePasswordResetRequestBuilder;
}();

var ByProjectKeyMePasswordRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePasswordRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePasswordRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePasswordRequestBuilder, [{
    key: "reset",
    value: function reset() {
      return new ByProjectKeyMePasswordResetRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/password',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePasswordRequestBuilder;
}();

var ByProjectKeyMePaymentsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePaymentsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePaymentsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePaymentsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePaymentsByIDRequestBuilder;
}();

var ByProjectKeyMePaymentsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePaymentsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePaymentsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePaymentsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePaymentsKeyByKeyRequestBuilder;
}();

var ByProjectKeyMePaymentsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMePaymentsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMePaymentsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMePaymentsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMePaymentsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMePaymentsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMePaymentsRequestBuilder;
}();

var ByProjectKeyMeShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeShoppingListsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeShoppingListsByIDRequestBuilder;
}();

var ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder;
}();

var ByProjectKeyMeShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeShoppingListsRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMeShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeShoppingListsRequestBuilder;
}();

var ByProjectKeyMeSignupRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeSignupRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeSignupRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeSignupRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me/signup',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeSignupRequestBuilder;
}();

var ByProjectKeyMeRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMeRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMeRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMeRequestBuilder, [{
    key: "emailConfirm",
    value: function emailConfirm() {
      return new ByProjectKeyMeEmailConfirmRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "password",
    value: function password() {
      return new ByProjectKeyMePasswordRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "signup",
    value: function signup() {
      return new ByProjectKeyMeSignupRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "login",
    value: function login() {
      return new ByProjectKeyMeLoginRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "activeCart",
    value: function activeCart() {
      return new ByProjectKeyMeActiveCartRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A shopping cart holds product variants and can be ordered.
     */

  }, {
    key: "carts",
    value: function carts() {
      return new ByProjectKeyMeCartsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a cart, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyMeOrdersRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The My Payments endpoint creates and provides access to payments scoped to a specific user.
     */

  }, {
    key: "payments",
    value: function payments() {
      return new ByProjectKeyMePaymentsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The My Shopping Lists endpoint creates and provides access to shopping lists scoped to a specific user.
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyMeShoppingListsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Update my customer
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Delete my Customer
     */

  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/me',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMeRequestBuilder;
}();

var ByProjectKeyMessagesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMessagesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMessagesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMessagesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/messages/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMessagesByIDRequestBuilder;
}();

var ByProjectKeyMessagesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyMessagesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyMessagesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyMessagesRequestBuilder, [{
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyMessagesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/messages',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyMessagesRequestBuilder;
}();

var ByProjectKeyOrdersEditsByIDApplyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsByIDApplyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsByIDApplyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsByIDApplyRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits/{ID}/apply',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsByIDApplyRequestBuilder;
}();

var ByProjectKeyOrdersEditsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsByIDRequestBuilder, [{
    key: "apply",
    value: function apply() {
      return new ByProjectKeyOrdersEditsByIDApplyRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/edits/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/edits/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsByIDRequestBuilder;
}();

var ByProjectKeyOrdersEditsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/edits/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/edits/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsKeyByKeyRequestBuilder;
}();

var ByProjectKeyOrdersEditsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersEditsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersEditsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersEditsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyOrdersEditsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyOrdersEditsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/edits',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/edits',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersEditsRequestBuilder;
}();

var ByProjectKeyOrdersImportRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersImportRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersImportRequestBuilder);

    this.args = args;
  }
  /**
   *	Create an Order by Import
   */


  _createClass(ByProjectKeyOrdersImportRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/import',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersImportRequestBuilder;
}();

var ByProjectKeyOrdersByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersByIDRequestBuilder;
}();

var ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder);

    this.args = args;
  }
  /**
   *	In case the orderNumber does not match the regular expression [a-zA-Z0-9_\-]+,
   *	it should be provided in URL-encoded format.
   *
   */


  _createClass(ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder;
}();

var ByProjectKeyOrdersRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyOrdersRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyOrdersRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyOrdersRequestBuilder, [{
    key: "importOrder",
    value: function importOrder() {
      return new ByProjectKeyOrdersImportRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withOrderNumber",
    value: function withOrderNumber(childPathArgs) {
      return new ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	OrderEdit are containers for financial changes after an Order has been placed.
     */

  }, {
    key: "edits",
    value: function edits() {
      return new ByProjectKeyOrdersEditsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyOrdersByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Creates an order from a Cart.
     *	The cart must have a shipping address set before creating an order.
     *	When using the Platform TaxMode, the shipping address is used for tax calculation.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/orders',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyOrdersRequestBuilder;
}();

var ByProjectKeyPaymentsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyPaymentsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyPaymentsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyPaymentsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/payments/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyPaymentsByIDRequestBuilder;
}();

var ByProjectKeyPaymentsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyPaymentsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyPaymentsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyPaymentsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/payments/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyPaymentsKeyByKeyRequestBuilder;
}();

var ByProjectKeyPaymentsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyPaymentsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyPaymentsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyPaymentsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyPaymentsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyPaymentsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	To create a payment object a payment draft object has to be given with the request.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/payments',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyPaymentsRequestBuilder;
}();

var ByProjectKeyProductDiscountsMatchingRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsMatchingRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsMatchingRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductDiscountsMatchingRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts/matching',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsMatchingRequestBuilder;
}();

var ByProjectKeyProductDiscountsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductDiscountsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-discounts/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsByIDRequestBuilder;
}();

var ByProjectKeyProductDiscountsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductDiscountsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-discounts/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsKeyByKeyRequestBuilder;
}();

var ByProjectKeyProductDiscountsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductDiscountsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductDiscountsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductDiscountsRequestBuilder, [{
    key: "matching",
    value: function matching() {
      return new ByProjectKeyProductDiscountsMatchingRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductDiscountsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductDiscountsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-discounts',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductDiscountsRequestBuilder;
}();

var ByProjectKeyProductProjectionsSearchRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsSearchRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsSearchRequestBuilder);

    this.args = args;
  }
  /**
   *	Search Product Projection
   */


  _createClass(ByProjectKeyProductProjectionsSearchRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-projections/search',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/x-www-form-urlencoded'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
    /**
     *	Search Product Projection
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/search',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsSearchRequestBuilder;
}();

var ByProjectKeyProductProjectionsSuggestRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsSuggestRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsSuggestRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductProjectionsSuggestRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/suggest',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsSuggestRequestBuilder;
}();

var ByProjectKeyProductProjectionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a product in a catalog by ID.
   *	When used with an API client that has the view_published_products:{projectKey} scope,
   *	this endpoint only returns published (current) product projections.
   *
   */


  _createClass(ByProjectKeyProductProjectionsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsByIDRequestBuilder;
}();

var ByProjectKeyProductProjectionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets the current or staged representation of a product found by Key.
   *	When used with an API client that has the view_published_products:{projectKey} scope,
   *	this endpoint only returns published (current) product projections.
   *
   */


  _createClass(ByProjectKeyProductProjectionsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsKeyByKeyRequestBuilder;
}();

var ByProjectKeyProductProjectionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductProjectionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductProjectionsRequestBuilder);

    this.args = args;
  }
  /**
   *	This endpoint provides high performance search queries over ProductProjections. The query result contains the
   *	ProductProjections for which at least one ProductVariant matches the search query. This means that variants can
   *	be included in the result also for which the search query does not match. To determine which ProductVariants match
   *	the search query, the returned ProductProjections include the additional field isMatchingVariant.
   *
   */


  _createClass(ByProjectKeyProductProjectionsRequestBuilder, [{
    key: "search",
    value: function search() {
      return new ByProjectKeyProductProjectionsSearchRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The source of data for suggestions is the searchKeyword field in a product
     */

  }, {
    key: "suggest",
    value: function suggest() {
      return new ByProjectKeyProductProjectionsSuggestRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductProjectionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductProjectionsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	You can use the product projections query endpoint to get the current or staged representations of Products.
     *	When used with an API client that has the view_published_products:{projectKey} scope,
     *	this endpoint only returns published (current) product projections.
     *
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-projections',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductProjectionsRequestBuilder;
}();

var ByProjectKeyProductTypesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductTypesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductTypesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductTypesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductTypesByIDRequestBuilder;
}();

var ByProjectKeyProductTypesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductTypesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductTypesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductTypesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/product-types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductTypesKeyByKeyRequestBuilder;
}();

var ByProjectKeyProductTypesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductTypesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductTypesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductTypesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductTypesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductTypesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/product-types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/product-types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductTypesRequestBuilder;
}();

var ByProjectKeyProductsByIDImagesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsByIDImagesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsByIDImagesRequestBuilder);

    this.args = args;
  }
  /**
   *	Uploads a binary image file to a given product variant. The supported image formats are JPEG, PNG and GIF.
   *
   */


  _createClass(ByProjectKeyProductsByIDImagesRequestBuilder, [{
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products/{ID}/images',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsByIDImagesRequestBuilder;
}();

var ByProjectKeyProductsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductsByIDRequestBuilder, [{
    key: "images",
    value: function images() {
      return new ByProjectKeyProductsByIDImagesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Gets the full representation of a product by ID.
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/products/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsByIDRequestBuilder;
}();

var ByProjectKeyProductsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets the full representation of a product by Key.
   */


  _createClass(ByProjectKeyProductsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/products/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsKeyByKeyRequestBuilder;
}();

var ByProjectKeyProductsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyProductsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyProductsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyProductsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyProductsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyProductsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	You can use the query endpoint to get the full representations of products.
     *	REMARK: We suggest to use the performance optimized search endpoint which has a bunch functionalities,
     *	the query API lacks like sorting on custom attributes, etc.
     *
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/products',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	To create a new product, send a representation that is going to become the initial staged representation
     *	of the new product in the master catalog. If price selection query parameters are provided,
     *	the selected prices will be added to the response.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/products',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyProductsRequestBuilder;
}();

var ByProjectKeyReviewsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyReviewsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyReviewsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyReviewsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/reviews/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/reviews/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/reviews/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyReviewsByIDRequestBuilder;
}();

var ByProjectKeyReviewsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyReviewsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyReviewsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyReviewsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/reviews/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/reviews/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/reviews/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyReviewsKeyByKeyRequestBuilder;
}();

var ByProjectKeyReviewsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyReviewsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyReviewsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyReviewsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyReviewsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyReviewsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/reviews',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/reviews',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyReviewsRequestBuilder;
}();

var ByProjectKeyShippingMethodsMatchingCartRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsMatchingCartRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsMatchingCartRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsMatchingCartRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/matching-cart',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsMatchingCartRequestBuilder;
}();

var ByProjectKeyShippingMethodsMatchingLocationRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsMatchingLocationRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsMatchingLocationRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsMatchingLocationRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/matching-location',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsMatchingLocationRequestBuilder;
}();

var ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/matching-orderedit',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder;
}();

var ByProjectKeyShippingMethodsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shipping-methods/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shipping-methods/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsByIDRequestBuilder;
}();

var ByProjectKeyShippingMethodsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shipping-methods/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shipping-methods/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsKeyByKeyRequestBuilder;
}();

var ByProjectKeyShippingMethodsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShippingMethodsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShippingMethodsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShippingMethodsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyShippingMethodsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Get ShippingMethods for a cart
     */

  }, {
    key: "matchingCart",
    value: function matchingCart() {
      return new ByProjectKeyShippingMethodsMatchingCartRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Get ShippingMethods for an order edit
     */

  }, {
    key: "matchingOrderedit",
    value: function matchingOrderedit() {
      return new ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Get ShippingMethods for a location
     */

  }, {
    key: "matchingLocation",
    value: function matchingLocation() {
      return new ByProjectKeyShippingMethodsMatchingLocationRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyShippingMethodsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shipping-methods',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shipping-methods',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShippingMethodsRequestBuilder;
}();

var ByProjectKeyShoppingListsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShoppingListsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShoppingListsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets a shopping list by ID.
   */


  _createClass(ByProjectKeyShoppingListsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shopping-lists/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShoppingListsByIDRequestBuilder;
}();

var ByProjectKeyShoppingListsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShoppingListsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShoppingListsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Gets a shopping list by Key.
   */


  _createClass(ByProjectKeyShoppingListsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	Update a shopping list found by its Key.
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/shopping-lists/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShoppingListsKeyByKeyRequestBuilder;
}();

var ByProjectKeyShoppingListsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyShoppingListsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyShoppingListsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyShoppingListsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyShoppingListsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyShoppingListsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/shopping-lists',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyShoppingListsRequestBuilder;
}();

var ByProjectKeyStatesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStatesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStatesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStatesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/states/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/states/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/states/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStatesByIDRequestBuilder;
}();

var ByProjectKeyStatesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStatesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStatesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStatesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/states/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/states/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/states/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStatesKeyByKeyRequestBuilder;
}();

var ByProjectKeyStatesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStatesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStatesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStatesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyStatesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyStatesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/states',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/states',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStatesRequestBuilder;
}();

var ByProjectKeyStoresByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStoresByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStoresByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStoresByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/stores/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/stores/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/stores/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStoresByIDRequestBuilder;
}();

var ByProjectKeyStoresKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStoresKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStoresKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStoresKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/stores/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/stores/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/stores/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStoresKeyByKeyRequestBuilder;
}();

var ByProjectKeyStoresRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyStoresRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyStoresRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyStoresRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyStoresKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyStoresByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/stores',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/stores',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyStoresRequestBuilder;
}();

var ByProjectKeySubscriptionsByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeySubscriptionsByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeySubscriptionsByIDRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the representation of a subscription by its id.
   */


  _createClass(ByProjectKeySubscriptionsByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/subscriptions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/subscriptions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/subscriptions/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeySubscriptionsByIDRequestBuilder;
}();

var ByProjectKeySubscriptionsKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeySubscriptionsKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeySubscriptionsKeyByKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Retrieves the representation of a subscription by its key.
   */


  _createClass(ByProjectKeySubscriptionsKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/subscriptions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/subscriptions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/subscriptions/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeySubscriptionsKeyByKeyRequestBuilder;
}();

var ByProjectKeySubscriptionsRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeySubscriptionsRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeySubscriptionsRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeySubscriptionsRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeySubscriptionsKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeySubscriptionsByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/subscriptions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
    /**
     *	The creation of a Subscription is eventually consistent, it may take up to a minute before it becomes fully active.
     *	In order to test that the destination is correctly configured, a test message will be put into the queue.
     *	If the message could not be delivered, the subscription will not be created.
     *	The payload of the test message is a notification of type ResourceCreated for the resourceTypeId subscription.
     *	Currently, a maximum of 25 subscriptions can be created per project.
     *
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/subscriptions',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeySubscriptionsRequestBuilder;
}();

var ByProjectKeyTaxCategoriesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTaxCategoriesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTaxCategoriesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTaxCategoriesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/tax-categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/tax-categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/tax-categories/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTaxCategoriesByIDRequestBuilder;
}();

var ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/tax-categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/tax-categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/tax-categories/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder;
}();

var ByProjectKeyTaxCategoriesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTaxCategoriesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTaxCategoriesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTaxCategoriesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyTaxCategoriesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/tax-categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/tax-categories',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTaxCategoriesRequestBuilder;
}();

var ByProjectKeyTypesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTypesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTypesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTypesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/types/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTypesByIDRequestBuilder;
}();

var ByProjectKeyTypesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTypesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTypesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTypesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/types/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTypesKeyByKeyRequestBuilder;
}();

var ByProjectKeyTypesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyTypesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyTypesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyTypesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyTypesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyTypesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/types',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyTypesRequestBuilder;
}();

var ByProjectKeyZonesByIDRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyZonesByIDRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyZonesByIDRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyZonesByIDRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/zones/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/zones/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/zones/{ID}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyZonesByIDRequestBuilder;
}();

var ByProjectKeyZonesKeyByKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyZonesKeyByKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyZonesKeyByKeyRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyZonesKeyByKeyRequestBuilder, [{
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/zones/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/zones/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }, {
    key: "delete",
    value: function _delete(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'DELETE',
        uriTemplate: '/{projectKey}/zones/key={key}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyZonesKeyByKeyRequestBuilder;
}();

var ByProjectKeyZonesRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyZonesRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyZonesRequestBuilder);

    this.args = args;
  }

  _createClass(ByProjectKeyZonesRequestBuilder, [{
    key: "withKey",
    value: function withKey(childPathArgs) {
      return new ByProjectKeyZonesKeyByKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "withId",
    value: function withId(childPathArgs) {
      return new ByProjectKeyZonesByIDRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}/zones',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs
      }, this.args.executeRequest);
    }
  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}/zones',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        queryParams: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.queryArgs,
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyZonesRequestBuilder;
}();

var ByProjectKeyRequestBuilder = /*#__PURE__*/function () {
  function ByProjectKeyRequestBuilder(args) {
    _classCallCheck(this, ByProjectKeyRequestBuilder);

    this.args = args;
  }
  /**
   *	Categories are used to organize products in a hierarchical structure.
   */


  _createClass(ByProjectKeyRequestBuilder, [{
    key: "categories",
    value: function categories() {
      return new ByProjectKeyCategoriesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A shopping cart holds product variants and can be ordered.
     */

  }, {
    key: "carts",
    value: function carts() {
      return new ByProjectKeyCartsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Cart discounts are used to change the prices of different elements within a cart.
     */

  }, {
    key: "cartDiscounts",
    value: function cartDiscounts() {
      return new ByProjectKeyCartDiscountsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Channels represent a source or destination of different entities. They can be used to model warehouses or stores.
     *
     */

  }, {
    key: "channels",
    value: function channels() {
      return new ByProjectKeyChannelsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A customer is a person purchasing products. customers, Orders, Comments and Reviews can be associated to a customer.
     *
     */

  }, {
    key: "customers",
    value: function customers() {
      return new ByProjectKeyCustomersRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	customer-groups are used to evaluate products and channels.
     */

  }, {
    key: "customerGroups",
    value: function customerGroups() {
      return new ByProjectKeyCustomerGroupsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Store custom JSON values.
     */

  }, {
    key: "customObjects",
    value: function customObjects() {
      return new ByProjectKeyCustomObjectsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Discount codes can be added to a discount-code to enable certain discount-code discounts.
     */

  }, {
    key: "discountCodes",
    value: function discountCodes() {
      return new ByProjectKeyDiscountCodesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The commercetools™ platform provides a GraphQL API
     */

  }, {
    key: "graphql",
    value: function graphql() {
      return new ByProjectKeyGraphqlRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Inventory allows you to track stock quantities.
     */

  }, {
    key: "inventory",
    value: function inventory() {
      return new ByProjectKeyInventoryRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Retrieves the authenticated customer.
     */

  }, {
    key: "login",
    value: function login() {
      return new ByProjectKeyLoginRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A message represents a change or an action performed on a resource (like an Order or a Product).
     */

  }, {
    key: "messages",
    value: function messages() {
      return new ByProjectKeyMessagesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	An order can be created from a order, usually after a checkout process has been completed.
     */

  }, {
    key: "orders",
    value: function orders() {
      return new ByProjectKeyOrdersRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Payments hold information about the current state of receiving and/or refunding money
     */

  }, {
    key: "payments",
    value: function payments() {
      return new ByProjectKeyPaymentsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Products are the sellable goods in an e-commerce project on CTP. This document explains some design concepts
     *	of products on CTP and describes the available HTTP APIs for working with them.
     *
     */

  }, {
    key: "products",
    value: function products() {
      return new ByProjectKeyProductsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Product discounts are used to change certain product prices.
     */

  }, {
    key: "productDiscounts",
    value: function productDiscounts() {
      return new ByProjectKeyProductDiscountsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	A projected representation of a product shows the product with its current or staged data. The current or staged
     *	representation of a product in a catalog is called a product projection.
     *
     */

  }, {
    key: "productProjections",
    value: function productProjections() {
      return new ByProjectKeyProductProjectionsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Product Types are used to describe common characteristics, most importantly common custom attributes,
     *	of many concrete products.
     *
     */

  }, {
    key: "productTypes",
    value: function productTypes() {
      return new ByProjectKeyProductTypesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Reviews are used to evaluate products and channels.
     */

  }, {
    key: "reviews",
    value: function reviews() {
      return new ByProjectKeyReviewsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Shipping Methods define where orders can be shipped and what the costs are.
     */

  }, {
    key: "shippingMethods",
    value: function shippingMethods() {
      return new ByProjectKeyShippingMethodsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	shopping-lists e.g. for wishlist support
     */

  }, {
    key: "shoppingLists",
    value: function shoppingLists() {
      return new ByProjectKeyShoppingListsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The commercetools platform allows you to model states of certain objects, such as orders, line items, products,
     *	reviews, and payments in order to define finite state machines reflecting the business logic you'd like to
     *	implement.
     *
     */

  }, {
    key: "states",
    value: function states() {
      return new ByProjectKeyStatesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Subscriptions allow you to be notified of new messages or changes via a Message Queue of your choice
     */

  }, {
    key: "subscriptions",
    value: function subscriptions() {
      return new ByProjectKeySubscriptionsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Tax Categories define how products are to be taxed in different countries.
     */

  }, {
    key: "taxCategories",
    value: function taxCategories() {
      return new ByProjectKeyTaxCategoriesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Types define custom fields that are used to enhance resources as you need.
     */

  }, {
    key: "types",
    value: function types() {
      return new ByProjectKeyTypesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Zones allow defining ShippingRates for specific Locations.
     */

  }, {
    key: "zones",
    value: function zones() {
      return new ByProjectKeyZonesRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "me",
    value: function me() {
      return new ByProjectKeyMeRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Extend the behavior of an API with your business logic
     */

  }, {
    key: "extensions",
    value: function extensions() {
      return new ByProjectKeyExtensionsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Manage your API Clients via an API. Useful for Infrastructure-as-Code tooling, and regularly rotating API secrets.
     *
     */

  }, {
    key: "apiClients",
    value: function apiClients() {
      return new ByProjectKeyApiClientsRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	Stores let you model the context your customers shop in.
     */

  }, {
    key: "stores",
    value: function stores() {
      return new ByProjectKeyStoresRequestBuilder({
        pathArgs: _objectSpread2({}, this.args.pathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
  }, {
    key: "inStoreKeyWithStoreKeyValue",
    value: function inStoreKeyWithStoreKeyValue(childPathArgs) {
      return new ByProjectKeyInStoreKeyByStoreKeyRequestBuilder({
        pathArgs: _objectSpread2(_objectSpread2({}, this.args.pathArgs), childPathArgs),
        executeRequest: this.args.executeRequest,
        baseUri: this.args.baseUri
      });
    }
    /**
     *	The Endpoint is responding a limited set of information about settings and configuration of the project.
     *
     */

  }, {
    key: "get",
    value: function get(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'GET',
        uriTemplate: '/{projectKey}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({}, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers)
      }, this.args.executeRequest);
    }
    /**
     *	Update project
     */

  }, {
    key: "post",
    value: function post(methodArgs) {
      return new ApiRequest({
        baseUri: this.args.baseUri,
        method: 'POST',
        uriTemplate: '/{projectKey}',
        pathVariables: this.args.pathArgs,
        headers: _objectSpread2({
          'Content-Type': 'application/json'
        }, methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.headers),
        body: methodArgs === null || methodArgs === void 0 ? void 0 : methodArgs.body
      }, this.args.executeRequest);
    }
  }]);

  return ByProjectKeyRequestBuilder;
}();

var ApiRoot = /*#__PURE__*/function () {
  function ApiRoot(args) {
    var _args$baseUri;

    _classCallCheck(this, ApiRoot);

    _defineProperty(this, "executeRequest", void 0);

    _defineProperty(this, "baseUri", void 0);

    this.executeRequest = args.executeRequest;
    this.baseUri = (_args$baseUri = args.baseUri) !== null && _args$baseUri !== void 0 ? _args$baseUri : 'https://api.europe-west1.gcp.commercetools.com';
  }
  /**
   *	The Project endpoint is used to retrieve certain information from a project.
   */


  _createClass(ApiRoot, [{
    key: "withProjectKey",
    value: function withProjectKey(childPathArgs) {
      return new ByProjectKeyRequestBuilder({
        pathArgs: _objectSpread2({}, childPathArgs),
        executeRequest: this.executeRequest,
        baseUri: this.baseUri
      });
    }
  }]);

  return ApiRoot;
}();

/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
var createExecutorFromMiddlewares = function createExecutorFromMiddlewares(executor, midds) {
  if (!midds || midds.length == 0) {
    return executor;
  }

  var reduced = midds.reduce(reduceMiddleware);
  return middlewareToExecutor(reduced, executor);
};

function reduceMiddleware(middleware1, middleware2) {
  return function (request, executor) {
    return middleware1(request, middlewareToExecutor(middleware2, executor));
  };
}

function middlewareToExecutor(middleware, executor) {
  return function (request) {
    return middleware(request, executor);
  };
}

function createApiBuilderFromCtpClient(ctpClient, baseUri) {
  return new ApiRoot({
    executeRequest: ctpClient.execute,
    baseUri: baseUri
  });
}

export { ApiRoot, createApiBuilderFromCtpClient, createExecutorFromMiddlewares };
